########################################################
#
#   50 Extremely Useful PHP Tools
#   https://www.smashingmagazine.com/2009/01/50-extremely-useful-php-tools/
#
########################################################

------------------------------------------
Debugging Tools
------------------------------------------
https://code.google.com/archive/p/webgrind/
https://xdebug.org/
http://kcachegrind.sourceforge.net/html/Documentation.html
http://gubed.mccabe.nu/
http://www.php-debugger.com/dbg/
https://www.php-debug.com/www/
https://sourceforge.net/projects/php-dyn/


------------------------------------------
Testing And Optimization Tools
------------------------------------------
https://junit.org/junit5/
https://phpunit.de/
http://dbug.ospinto.com/
http://www.coderholic.com/php-profile-class/


------------------------------------------
Documentation Tools
------------------------------------------
https://phpdoc.org/
http://phpdox.net/


------------------------------------------
Security Tools
------------------------------------------
https://www.phpcaptcha.org/
https://blog.evaria.com/2007/pixy-the-php-security-scanner/

------------------------------------------
Image Manipulation And Graphs
------------------------------------------
http://www.maani.us/charts4/
http://pchart.sourceforge.net/index.php
http://wideimage.sourceforge.net/old/MainPage
http://www.magickwand.org/
https://jpgraph.net/
https://phpchart.com/
https://jpgraph.net/doc/faq.php
http://pchart.sourceforge.net/
https://dzone.com/articles/creating-dynamic-charts-with-php-and-postgresql
https://www.postgresonline.com/article_pfriendly/95.html


------------------------------------------
PHP Code Beautifier
------------------------------------------
https://pear.php.net/package/PHP_Beautifier
http://qbnz.com/highlighter/


------------------------------------------
[Dependency Analysis][reverse engineering]
------------------------------------------
https://xdebug.org/docs/code_coverage
https://xdebug.org/
https://xdebug.org/docs/profiler
https://pear.php.net/manual/en/package.php.php-uml.command-line.php
https://en.wikipedia.org/wiki/List_of_Unified_Modeling_Language_tools
https://wiki.eclipse.org/MDT-UML2-Tool-Compatibility
http://argouml.tigris.org/
https://www.ieee.hr/_download/repository/phpModeler-RM.pdf
https://github.com/mamuz/PhpDependencyAnalysis
https://github.com/mamuz/PhpDependencyAnalysis/wiki/4.-Examples
https://www.jetbrains.com/help/phpstorm/module-dependency-diagram.html
http://marjan.fesb.hr/~jomaras/phpModeler/
http://marjan.fesb.hr/~jomaras/phpModeler/phpModler.jar
https://sourceforge.net/projects/phpmodeler/
https://www.fer.unizg.hr/dices/resources/phpmodeler
https://pear.php.net/package/PHP_UML
https://hotexamples.com/examples/-/Modeler/-/php-modeler-class-examples.html
https://www.researchgate.net/publication/220999471_WebUML_Reverse_engineering_of_web_applications
https://blog.jetbrains.com/phpstorm/2017/09/uml-diagrams-in-phpstorm-2017-2/
https://circle.visual-paradigm.com/docs/code-engineering/instant-reverse/how-to-generate-uml-from-php-5-0/


https://pear.php.net/package/PHP_UML/
https://pear.php.net/package/PHP_UML/
pear install pear/php_uml
pear install pear/php_uml-alpha
phpuml -o project.xmi

https://github.com/jakobwesthoff/phuml
phuml -r /var/www/my_project -graphviz -createAssociations false -neato out.png
https://dasunhegoda.com/class-diagram-from-php-code-using-phuml/867/


https://modeling-languages.com/php-to-uml-reverse-engineering-transformation/
https://modeling-languages.com/modisco-full-paper/
https://www.eclipse.org/MoDisco/

http://bouml.free.fr/
https://www.bouml.fr/
https://www.bouml.fr/download.html
https://www.bouml.fr/tutorial/tutorial.html
https://www.bouml.fr/documentation.html
https://www.phpdoc.org/

<Ubuntu>
wget -q https://www.bouml.fr/bouml_key.asc -O- | sudo apt-key add -
echo "deb https://www.bouml.fr/apt/disco disco free" | sudo tee -a /etc/apt/sources.list
deb https://www.bouml.fr/apt/disco disco free
sudo apt-get update

wget -q http://bouml.free.fr/bouml_key.asc -O- | sudo apt-key add -
echo "deb http://bouml.free.fr/apt/disco disco free" | sudo tee -a /etc/apt/sources.list
deb http://bouml.free.fr/apt/disco disco free
sudo apt-get update

sudo apt-get install bouml

<Debian>
wget -q https://www.bouml.fr/bouml_key.asc -O- | sudo apt-key add -
echo "deb https://www.bouml.fr/apt/stretch stretch free" | sudo tee -a /etc/apt/sources.list
deb https://www.bouml.fr/apt/stretch stretch free
sudo apt-get update

wget -q http://bouml.free.fr/bouml_key.asc -O- | sudo apt-key add -
echo "deb http://bouml.free.fr/apt/stretch stretch free" | sudo tee -a /etc/apt/sources.list
deb http://bouml.free.fr/apt/stretch stretch free
sudo apt-get update

sudo apt-get install bouml

----------------------------------------
https://sparxsystems.com/
http://argouml.tigris.org/
https://sparxsystems.com/products/ea/index.html
https://sparxsystems.com/platforms/php_uml.html
http://www.aarontrevena.co.uk/opensource/autodia/
http://tech.motion-twin.com/php_php2xmi.html
https://umbrello.kde.org/
https://github.com/troelskn/konstrukt/blob/master/script/docs_api.php
http://argouml.tigris.org/
http://argouml-graphviz.tigris.org/
http://tech.motion-twin.com/php_php2xmi.html


https://www.jetbrains.com/phpstorm/whatsnew/
https://blog.jetbrains.com/phpstorm/2017/09/uml-diagrams-in-phpstorm-2017-2/



------------------------------------------
[admin]
------------------------------------------
https://www.phpmyadmin.net/

------------------------------------------
[mapping pattern]
------------------------------------------
https://stackify.com/dependency-injection/
https://codeinthehole.com/projects/domain-model-mapper-a-php-data-mapper-implementation/
https://designpatternsphp.readthedocs.io/de/latest/Structural/DataMapper/README.html
https://designpatternsphp.readthedocs.io/en/latest/Structural/DataMapper/README.html
https://symfony.com/doc/4.2/best_practices/business-logic.html
https://cleancode.blog/an-automapper-for-php-the-powerful-and-simple-solution-for-mappings/
http://www.redevelopment.nl/blog/2011/09/datamapper-pattern-in-php/
https://de.slideshare.net/aaronsaray/enterprise-php-mappers-models-and-services















##################################################################
#
#	phpuml
#
##################################################################

https://pear.php.net/manual/en/package.php.php-uml.intro.php
sudo apt install php-pear
sudo pear install pear/php_uml
pear list
pear list php_uml | grep phpuml


phpuml [INPUT] -o [OUTPUT LOCATION] -f [OUTPUT FORMAT]

/usr/bin/phpuml -h

-o directory                 			Output directory
-f format, --format=format   			Output format: "xmi" (default), "html", "htmlnew", "php"
-n name                      			Name of the generated UML model
-e encoding                  			Output character encoding

--no-deployment-view        			Disable generation of deployment view
--no-component-view         			Disable generation of component view
--no-dollar                 			Remove the dollar symbol in variable names
--no-docblocks              			Disable docblocks parsing (@package,  @param...)
--show-internal             			Include the elements marked with @internal
--only-api                  			Include only the elements marked with @api

-i pattern, --ignore=pattern  			Patterns/pathnames to ignore  (example: .svn)
-m pattern, --match=pattern             Patterns to match (default is: *.php)
-l errorLevel, --error-level=errorLevel	Set the error reporting level (0 for silent mode, 1 for PHP errors and exceptions, 2 for all errors and warnings)
--pure-object                           Use this switch if you want PHP_UML to ignore all non object-oriented code
-h, --help                            	show this help message and exit
-v, --version                         	show the program version and exit


 phpuml /var/www/test -o /tmp -x 1 -n Foo -m *.php6 -i .svn

 PHP_UML will recursively parse /var/www/test, keeping only the php6
 files, and excluding the svn folders; the UML model will be named
 "Foo", and the generated XMI file, in version 1, will be saved to
 "/tmp/Foo.xmi"


Example
/usr/bin/phpuml ~/git/cakephp/ -o Documents/ -f html


phpuml /var/www/foo
phpuml /var/www/foo -n MyProject
phpuml /var/www/foo -f html -o /var/tmp/
phpuml /var/www/foo -m *.php *.txt
phpuml /var/www/foo --no-dollar -o foo.xmi


##################################################################
#
#	phuml
#	https://github.com/jakobwesthoff/phuml
#	http://stackz.ru/en/393603/php-uml-generator
#
##################################################################

sudo apt install graphviz gimp
cd ~/git/
git clone https://github.com/jakobwesthoff/phuml
cd ~/git/phuml/src/app

./phuml -r /var/www/my_project -graphviz -createAssociations false -neato out.png
./phuml -r /home/emil/git/cakephp/ -graphviz -neato out.png
./phuml -r ./ -dot -createAssociations false -neato example.png

[|] Running... (This may take some time)
[|] Parsing class structure
[|] Running 'Graphviz' processor
[|] Running 'Neato' processor








