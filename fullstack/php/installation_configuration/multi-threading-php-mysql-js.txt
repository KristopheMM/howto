
###########################################
###########################################
####  Multi-Threading PHP MYSQL JS   ######
###########################################
###########################################



#############################
#####      MySQL     ########
#############################

my.ini
thread_cache_size = 8
thread_concurrency = 8



#############################
#####       PHP     #########
#############################

https://github.com/krakjoe/pthreads
https://gist.github.com/Divi/9696838

---

class AsyncOperation extends Thread {}
$stack = new AsyncOperation();

............................

$sql = new SQLWorker($host, $user, $pass, $db);
$sql->start();

$sql->stack($q1 = new SQLQuery("One long Query"));
$sql->stack($q2 = new SQLQuery("Another long Query"));

$q1->wait();
$q2->wait();

// Do Something Useful

............................

class AThread extends Thread {
  protected $counter = 0;
  public function run() {
    for ($i = 0; $i counter++;
    }
    echo "Counter is: " . $this->counter . PHP_EOL;
  }
}

$someThread = new AThread();
$someThread->start();

echo "Finished script" . PHP_EOL;

............................

# pthreads Extension build
# ------------------------
git clone https://github.com/krakjoe/pthreads.git /home/pthreads
cd /home/pthreads
apt-get install -y php5-dev
phpize
./configure --with-php-config=$PHP_DIRECTORY/bin/php-config
make
make install
mkdir $PHP_DIRECTORY/conf.d
echo "extension=pthreads.so" > /etc/php5ts/conf.d/pthreads.ini



#############################
#####       JS      #########
#############################


var worker = new Worker('bigLoop.js');
worker.onmessage = function (event) {
alert("Completed " + event.data + "iterations" );
};

if(typeof(Worker) !== "undefined") {
    // Yes! Web worker support!
    // Some code.....
} else {
    // Sorry! No Web Worker support..
}

if(typeof(w) == "undefined") {
    w = new Worker("demo_workers.js");
}

w.onmessage = function(event){
    document.getElementById("result").innerHTML = event.data;
};
w.terminate();

var worker = new Worker('task.js');
worker.postMessage(); // Start the worker.





##################################################
#
# Why are simple SELECTs on InnoDB 100x slower than on MyISAM
#
##################################################

SELECT importthreadid,importpostid FROM newbb_innopost PROCEDURE ANALYSE();

innodb_read_io_threads = 64
innodb_write_io_threads = 16
innodb_log_buffer_size = 256M
query_cache_size = 0
innodb_buffer_pool_dump_at_shutdown=1
innodb_buffer_pool_load_at_startup=1
innodb_purge_threads = 4

IGNORE INDEX()
EXPLAIN SELECT Name FROM City IGNORE INDEX (Name) WHERE name="Helsingborg" AND countrycode="SWE";

SELECT CONCAT(ROUND(KBS/POWER(1024,
IF(PowerOf1024<0,0,IF(PowerOf1024>3,0,PowerOf1024)))+0.4999),
SUBSTR(' KMG',IF(PowerOf1024<0,0,
IF(PowerOf1024>3,0,PowerOf1024))+1,1))
recommended_key_buffer_size FROM
(SELECT LEAST(POWER(2,32),KBS1) KBS
FROM (SELECT SUM(index_length) KBS1
FROM information_schema.tables
WHERE engine='MyISAM' AND
table_schema NOT IN ('information_schema','mysql')) AA ) A,
(SELECT 2 PowerOf1024) B;

SELECT CONCAT(ROUND(KBS/POWER(1024,
IF(PowerOf1024<0,0,IF(PowerOf1024>3,0,PowerOf1024)))+0.49999),
SUBSTR(' KMG',IF(PowerOf1024<0,0,
IF(PowerOf1024>3,0,PowerOf1024))+1,1)) recommended_innodb_buffer_pool_size
FROM (SELECT SUM(data_length+index_length) KBS FROM information_schema.tables
WHERE engine='InnoDB') A,
(SELECT 2 PowerOf1024) B;

CAVEAT

At the End of both queries is a an Inline Query (SELECT 2 PowerOf1024) B
(SELECT 0 PowerOf1024) gives the Setting in Bytes
(SELECT 1 PowerOf1024) gives the Setting in Kilobytes
(SELECT 2 PowerOf1024) gives the Setting in Megabytes
(SELECT 3 PowerOf1024) gives the Setting in Gigabytes
No powers less that 0 or greater than 3 is accepted


------------------------------------------------------------

Search domains / emails

SELECT count(*) AS c,
       substring_index(domain_name, '.', -1) AS tld
FROM domains_import
       USE INDEX ()        -- use no indexes
GROUP BY tld
ORDER BY c DESC
LIMIT 100 ;


https://dev.mysql.com/doc/refman/5.7/en/string-functions.html
https://dev.mysql.com/doc/refman/5.7/en/string-functions.html#function_substring-index
https://dev.mysql.com/doc/refman/5.7/en/string-functions.html#function_substring
https://dev.mysql.com/doc/refman/5.7/en/string-functions.html#function_substr
https://dev.mysql.com/doc/refman/5.7/en/string-functions.html#function_soundex

https://www.w3schools.com/sql/func_mysql_substring_index.asp
https://www.w3schools.com/sql/sql_ref_mysql.asp
https://www.w3schools.com/sql/func_mysql_substr.asp

SELECT SUBSTRING_INDEX("www.w3schools.com", ".", 1); # www
SELECT SUBSTRING_INDEX("www.w3schools.com", ".", 2); # www.w3schools
SELECT SUBSTRING_INDEX("www.w3schools.com", ".", -1); # com

SELECT SUBSTRING_INDEX("www@w3schools.com", ".", 1); # www
SELECT SUBSTRING_INDEX("www@w3schools.com", "@", 1); # www
SELECT SUBSTRING_INDEX("www@w3schools.com", ".", -1); # com
SELECT SUBSTRING_INDEX("www@w3schools.com", "@", -1); # w3schools.com

------------------------------------------------------------

SELECT SUBSTRING("SQL Tutorial", 5, 3) AS ExtractString;
SELECT SUBSTRING(CustomerName, 2, 5) AS ExtractString FROM Customers;
SELECT SUBSTRING("SQL Tutorial", -5, 5) AS ExtractString;

SELECT SUBSTR("SQL Tutorial", 5, 3) AS ExtractString; # Tut
SELECT SUBSTR(CustomerName, 2, 5) AS ExtractString FROM Customers;
SELECT SUBSTR("SQL Tutorial", -5, 5) AS ExtractString; # orial

------------------------------------------------------------

https://www.w3schools.com/php/php_mysql_create_table.asp
https://www.w3schools.com/sql/sql_having.asp
https://fiddles.io/
https://www.db-fiddle.com/
http://sqlfiddle.com/

CREATE TABLE test (
  id INT,
  name VARCHAR(30) NOT NULL
);
INSERT INTO test (id,name) VALUES (1,'unu');
INSERT INTO test (id,name) VALUES (2,'unu');
INSERT INTO test (id,name) VALUES (3,'doi');
INSERT INTO test (id,name) VALUES (4,'doi');
INSERT INTO test (id,name) VALUES (5,'doi');
INSERT INTO test (id,name) VALUES (6,'trei');

SELECT count(*) total, name
FROM test
GROUP BY name
ORDER BY total DESC


-------------------------------------------------------------

Benefits of the InnoDB memcached Plugin


innodb_file_per_table=1
innodb_buffer_pool_size = 1G
thread_cache_size = 16;
-- sysctl -w vm.swappiness=0
-- sysctl -w vm.swappiness=1
-- Max connections = 300
-- skip-name-resolve
query_cache_size = 64M
tmp_table_size= 64M
max_heap_table_size= 64M
slow-query-log = 1
slow-query-log-file = /var/lib/mysql/mysql-slow.log
long_query_time = 1
wait_timeout=60

https://www.percona.com/blog/2006/06/09/why-mysql-could-be-slow-with-large-tables/
https://dba.stackexchange.com/questions/75091/why-are-simple-selects-on-innodb-100x-slower-than-on-myisam
https://dba.stackexchange.com/questions/1/what-are-the-main-differences-between-innodb-and-myisam/2194#2194
https://dba.stackexchange.com/questions/1/what-are-the-main-differences-between-innodb-and-myisam/2194#2194
https://dba.stackexchange.com/questions/66774/why-query-cache-type-is-disabled-by-default-start-from-mysql-5-6/66796#66796
https://dev.mysql.com/doc/refman/5.6/en/innodb-memcached-benefits.html
https://dba.stackexchange.com/questions/110707/how-can-i-force-mysql-to-ignore-all-indexes#110713
https://dba.stackexchange.com/questions/110707/how-can-i-force-mysql-to-ignore-all-indexes
https://mariadb.com/kb/en/mariadb/ignore-index/
http://linuxpitstop.com/tips-to-improve-mariadb-performance/



---------------------------------//-----------------------------------------------

Articles:

http://www.tutorialspoint.com/html5/html5_web_workers.htm
http://t3n.de/news/aufgaben-html5-web-workers-399257/
https://html.spec.whatwg.org/multipage/workers.html
http://www.w3schools.com/htmL/html5_webworkers.asp
https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers
http://www.html5rocks.com/de/tutorials/workers/basics/


http://php.net/manual/de/class.thread.php
http://phplens.com/lens/php-book/optimizing-debugging-php.php


http://www.mullie.eu/parallel-processing-multi-tasking-php/
http://www.phpgangsta.de/richtige-threads-in-php-einfach-erstellen-mit-pthreads
https://entwickler.de/online/php/asynchronous-io-in-php-oder-doch-lieber-threads-137913.html
http://stackoverflow.com/questions/70855/how-can-one-use-multi-threading-in-php-applications/15501449#15501449
http://stackoverflow.com/questions/2267345/how-do-you-make-good-use-of-multicore-cpus-in-your-php-mysql-applications


http://php.net/manual/de/class.thread.php
https://www.phpgangsta.de/richtige-threads-in-php-einfach-erstellen-mit-pthreads
http://frank-it-beratung.com/blog/2016/02/23/threads-mit-php-tutorial/
https://stackoverflow.com/questions/70855/how-can-one-use-multi-threading-in-php-applications
https://blog.madewithlove.be/post/thread-carefully/
https://entwickler.de/online/asynchronous-io-in-php-oder-doch-lieber-threads-137913.html
https://github.com/krakjoe/pthreads