
##############################################################################################################################
#
#	PHP Session Locks â€“ How to Prevent Blocking Requests
#	Session lock record with PHP 7.0.9 - 7.1.8
#
#	PHP Warning: session_start(): Unable to clear session lock record.
#	FastCGI sent in stderr: "PHP message: PHP Warning:  session_start(): Write of lock failed in /var/www/ ...
#
##############################################################################################################################


https://github.com/php-memcached-dev/php-memcached/issues/269
https://github.com/php-memcached-dev/php-memcached/issues/213#issuecomment-178613213
https://github.com/php-memcached-dev/php-memcached/issues/269
https://ma.ttias.be/php-session-locking-prevent-sessions-blocking-in-requests/
https://github.com/magento/magento2/issues/5319
https://tracker.moodle.org/browse/MDL-42485
https://github.com/php-memcached-dev/php-memcached/blob/master/php_memcached_session.c
https://stackoverflow.com/questions/31378039/php-session-store-error-using-memcached
http://php.net/manual/de/function.session-start.php



php -i|grep sess_lock_wait_min
memcached.sess_lock_wait_min = 0;

- memcached.sess_lock_wait_min = 0;
+ memcached.sess_lock_wait_min = 250;


ini_set('session.lazy-write', 0); // Mimic PHP5 behaviour

# -----------------------------------


; Wait for 150 ms initially
memcached.sess_lock_wait_min = 150
; Wait for 500 ms in the next retries
memcached.sess_lock_wait_max = 500
; Retry for 60 times overally (max time would be 60 x 500 ms)
memcached.sess_lock_retries = 60
; Total time that a lock exists is 40 seconds which is equal to my max_execution_time
memcached.sess_lock_expire = 40



# -----------------------------------
ini_set('session.lazy_write', 0);
ini_set('memcached.sess_lock_wait_min', 150);
ini_set('memcached.sess_lock_wait_max', 150);
ini_set('memcached.sess_lock_retries', 15);
ini_set('memcached.sess_lock_expire', ini_get('max_execution_time'));
ini_set('memcached.sess_consistent_hash', 1);
ini_set('memcached.sess_binary_protocol', 0);
session_start();

# -----------------------------------
try this:
ini_set('memcached.sess_lock_wait_min', 150);
ini_set('memcached.sess_lock_wait_max', 150);
ini_set('memcached.sess_lock_retries', ini_get('max_execution_time') * 1000 / 150);
# remove all your other ini_sets (including session.lazy_write)

# -----------------------------------
ini_set('memcached.sess_lock_wait_min', 150); // milliseconds
ini_set('memcached.sess_lock_wait_max', 150); // milliseconds
ini_set('memcached.sess_lock_retries', ini_get('max_execution_time') * 1000 / 150); // keep trying for the full duration of 'max_execution_time'
ini_set('memcached.sess_lock_expire', ini_get('max_execution_time')); // seconds
ini_set('memcached.sess_consistent_hash', 1); // boolean

# -----------------------------------

/usr/local/etc/php/7.0/conf.d/ext-memcached.ini.

;memcached.sess_lock_wait = 150000
;memcached.sess_lock_max_wait = 0;

--

; The minimum time, in milliseconds, to wait between session lock attempts.
; This value is double on each lock retry until memcached.sess_lock_wait_max
; is reached, after which any further retries will take sess_lock_wait_max seconds.
; Default is 1000.

memcached.sess_lock_wait_min = 1000;

; The maximum time, in milliseconds, to wait between session lock attempts.
; Default is 2000.

memcached.sess_lock_wait_max = 2000;

; The number of times to retry locking the session lock, not including
; the first attempt.
; Default is 5.

memcached.sess_lock_retries = 5;










ini_set('session.auto_start',1);
ini_set('display_errors', 1);
ini_set('session.gc_maxlifetime',13440);
ini_set('session.cache_expire',1800);
ini_set('session.use_cookies',1);

usleep(rand(1300000,1800000));

if(!($_SESSION)){
   ini_set('session.auto_start',1);
   session_start();
}

ini_set('memcached.sess_lock_wait_min', 150); // milliseconds
ini_set('memcached.sess_lock_wait_max', 150); // milliseconds
ini_set('memcached.sess_lock_retries', ini_get('max_execution_time') * 1000 / 150); // keep
ini_set('memcached.sess_lock_expire', ini_get('max_execution_time')); // seconds
ini_set('memcached.sess_consistent_hash', 1); // boolean
ini_set('session.lazy-write', 0); // Mimic PHP5 behaviour

; Wait for 150 ms initially
memcached.sess_lock_wait_min = 150
; Wait for 500 ms in the next retries
memcached.sess_lock_wait_max = 500
; Retry for 60 times overally (max time would be 60 x 500 ms)
memcached.sess_lock_retries = 60
; Total time that a lock exists is 40 seconds which is equal to my max_execution_time
memcached.sess_lock_expire = 40

https://github.com/php-memcached-dev/php-memcached/issues/269

#############################################################
# session_start(): Unable to clear session lock record in
#############################################################

# FIX  -----------------------------------------------

ini_set('session.auto_start',1);
ini_set('session.gc_maxlifetime',1440);
ini_set('session.cache_expire',180);

ini_set('memcached.sess_lock_wait_min', 150); // milliseconds
ini_set('memcached.sess_lock_wait_max', 500); // milliseconds
ini_set('memcached.sess_lock_retries', 10); // keep
ini_set('memcached.sess_lock_expire', 60); // seconds
ini_set('memcached.sess_consistent_hash', 1); // boolean
ini_set('session.lazy-write', 0); // Mimic PHP5 behaviour

# FIX  -----------------------------------------------

#usleep(rand(1300000,1800000));

http://php.net/manual/en/memcached.configuration.php
http://php.net/manual/de/session.configuration.php#ini.session.auto-start
http://php.net/manual/de/session.configuration.php
http://php.net/manual/de/session.configuration.php#ini.session.auto-start


https://linux.die.net/man/1/setfacl
















# -----------------------------------

session.save_handler = memcache
session.save_path    = "tcp://1.29.1.13:11211, tcp://1.29.1.14:11211"
and in memcache.ini:

extension=memcache.so
[memcache]
memcache.dbpath="/var/lib/memcache"
memcache.maxreclevel=0
memcache.maxfiles=0
memcache.archivememlim=0
memcache.maxfilesize=0
memcache.maxratio=0
memcache.hash_strategy=consistent
memcache.allow_failover=1
memcache.session_redundancy=2

# -----------------------------------

ini_set('memcached.sess_lock_max_wait', $this->session_memcached_acquire_lock_timeout);
ini_set('memcached.sess_lock_expire', $this->session_memcached_lock_expire);

# potential solution, you could do something like:

public static function start() {
    $default = ini_get('max_execution_time');
    set_time_limit($CFG->session_memcached_lock_expire);
    parent::start();
    set_time_limit($default);
}


# ---------------------------------------



$ cat /etc/php-5.5.ini
...
...
; http://php.net/session.save-handler
; session.save_handler = files
session.hash_bits_per_character = 5
session.hash_function = 0
session.use_trans_sid = 0
session.cache_expire = 180
session.cache_limiter = nocache
session.referer_check =
session.bug_compat_warn = Off
session.bug_compat_42 = Off
session.gc_maxlifetime = 1440
session.gc_divisor = 1000
session.gc_probability = 1
session.serialize_handler = php
session.cookie_httponly =
session.cookie_path = /
session.cookie_lifetime = 0
session.auto_start = 0
session.name = PHPSESSID
session.use_only_cookies = 1
session.use_cookies = 1
...
...

$ cat /etc/php-5.5.d/memcached.ini
extension=memcached.so

session.save_handler=memcached
session.save_path="*******.cache.amazonaws.com:11211"
memcached.sess_locking = On
memcached.sess_lock_wait = 150000
memcached.sess_lock_max_wait = 0;
memcached.sess_lock_expire = 0;
memcached.sess_prefix = "memc.sess.key."
memcached.sess_consistent_hash = Off
memcached.sess_remove_failed = 0
memcached.sess_number_of_replicas = 0
memcached.sess_binary = Off
memcached.sess_randomize_replica_read = Off
memcached.sess_connect_timeout = 1000
memcached.sess_sasl_username = NULL
memcached.sess_sasl_password = NULL
memcached.compression_type = "fastlz"
memcached.compression_factor = "1.3"
memcached.compression_threshold = 2000
memcached.serializer = "igbinary"
memcached.use_sasl = Off
memcached.store_retry_count = 2

$ php -i | grep memcached
/etc/php-5.5.d/memcached.ini,
memcached
memcached support => enabled
libmemcached version => 1.0.8
memcached.compression_factor => 1.3 => 1.3
memcached.compression_threshold => 2000 => 2000
memcached.compression_type => fastlz => fastlz
memcached.serializer => igbinary => igbinary
memcached.sess_binary => no value => no value
memcached.sess_connect_timeout => 1000 => 1000
memcached.sess_consistent_hash => no value => no value
memcached.sess_lock_expire => 0 => 0
memcached.sess_lock_max_wait => 0 => 0
memcached.sess_lock_wait => 150000 => 150000
memcached.sess_locking => no value => no value
memcached.sess_number_of_replicas => 0 => 0
memcached.sess_prefix => memc.sess.key. => memc.sess.key.
memcached.sess_randomize_replica_read => no value => no value
memcached.sess_remove_failed => 0 => 0
memcached.sess_sasl_password => no value => no value
memcached.sess_sasl_username => no value => no value
memcached.store_retry_count => 2 => 2
memcached.use_sasl => no value => no value
Registered save handlers => files user memcached
session.save_handler => memcached => memcached

$ yum list installed | grep memcached
libmemcached.x86_64                  1.0.8-2.6.amzn1               @amzn-main
memcached.x86_64                     1.4.15-9.12.amzn1             @amzn-main
php55-pecl-memcached.x86_64          2.2.0-5.14.amzn1              @amzn-updates

$ cat /etc/php-fpm-5.5.d/www.conf
php_value[session.save_handler] = memcached
php_value[session.save_path] = "*******.cache.amazonaws.com:11211"

$ memcached-tool *******.cache.amazonaws.com:11211 display
  #  Item_Size  Max_age   Pages   Count   Full?  Evicted Evict_Time OOM
  1      96B         0s       1       0     yes        0        0    0

$ memcached-tool *******.cache.amazonaws.com:11211 stats



#########################################################

php 7.X settings zend  symfony

#########################################################

https://www.strato.de/faq/hosting/so-aendern-sie-ihre-php-einstellungen-in-ihrem-hosting-paket/
https://hub.docker.com/_/php-zendserver
https://docs.zendframework.com/zend-expressive/v3/features/template/zend-view/
https://www.zend.com/webinars/maxing-out-performance-zend-server-php-7
https://framework.zend.com/manual/1.12/de/zend.controller.quickstart.html
https://phpbuilder.com/boost-php-site-performance-with-zend-framework-data-caching/
https://symfony.com/doc/current/components/cache/cache_items.html
https://symfony.com/doc/current/components/cache.html

ini_set('error_reporting', true);
ini_set('display_errors', false);
ini_set('display_startup_errors', false);

ini_set('max_execution_time', 60);
ini_set('memory_limit', '250M'); // 2G
ini_set('session.gc_maxlifetime', 1440);
ini_set('session.cache_expire', 180);


Configuring Zend_Cache
$frontendOptions = array( 'lifetime' => 1450, 'caching' => true, 'automatic_serialization' => true );
$backendOptions = array( 'cache_dir' => '/var/www/beta.example.com/cache/' );

Caching Database Results
$cache = Zend_Cache::factory( 'Core', 'File', $frontendOptions, $backendOptions );
$frontendOptions = array( 'lifetime' => 1450, 'caching' => true, 'automatic_serialization' => true );
$backendOptions = array( 'cache_dir' => '/var/www/beta.example.com/cache/' );
$cache = Zend_Cache::factory( 'Core', 'File', $frontendOptions, $backendOptions );
if ( ($gamesPaginator = $cache->load('games')) === false) {
$gamesPaginator = $platform->retrieveGames($currentPage, $resultsPerPage, $sort); $cache->save('games'); }


Zend_Cache_Core

Zend_Cache_Frontend_Output
Zend_Cache_Frontend_Function
Zend_Cache_Frontend_Class
Zend_Cache_Frontend_File
Zend_Cache_Frontend_Page

Zend_Cache_Backend_File
Zend_Cache_Backend_Sqlite
Zend_Cache_Backend_Memcached
Zend_Cache_Backend_Apc
Zend_Cache_Backend_Xcache
Zend_Cache_Backend_ZendPlatform
Zend_Cache_Backend_TwoLevels

Zend Debuger
Zend Profiler
Zend Monitoring
Zend Code Tracing

php composer.phar install --optimize-autoloader
php composer.phar update --optimize-autoloader
composer require symfony/cache

