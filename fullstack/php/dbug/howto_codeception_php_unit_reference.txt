
####################################################################
#
#   UnitTests  codeception
#
#   https://codeception.com/docs/reference/Commands
#   https://codeception.com/docs/05-UnitTests
#
####################################################################

use \Codeception\Util\Debug as UnitDebug;
class ExampleTest extends \Codeception\Test\Unit
{
    /**
     * @var \UnitTester
     */
    protected $tester;
    protected function _before()    {   }
    protected function _after()    {    }
    // tests
    public function testMe()    {    }
}

class UserTest extends \Codeception\Test\Unit
{
    public function testValidation()
    {
        $user = new User();
        $user->setName(null);
        $this->assertFalse($user->validate(['username']));
        $user->setName('toolooooongnaaaaaaameeee');
        $this->assertFalse($user->validate(['username']));
        $user->setName('davert');
        $this->assertTrue($user->validate(['username']));
    }
}

/*
ASSERTIONS
$this->assertEquals()
$this->assertContains()
$this->assertFalse()
$this->assertTrue()
$this->assertNull()
$this->assertEmpty()
*/


// PHPUnit
// https://phpunit.de/manual/6.5/en/appendixes.assertions.html
// https://www.jetbrains.com/help/phpstorm/creating-run-debug-configuration-for-tests.html

use PHPUnit\Framework\TestCase;

class ArrayHasKeyTest extends TestCase
{
    public function testFailure()
    {
        $this->assertArrayHasKey('foo', ['bar' => 'baz']);
    }
}

class ClassHasAttributeTest extends TestCase
{
    public function testFailure()
    {
        $this->assertClassHasAttribute('foo', stdClass::class);
    }
}
