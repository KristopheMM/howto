///////////////////////////////////////////////
//
//  POPUP JS
//
//  http://www.javascriptkit.com/dhtmltutors/ajaxgetpost.shtml
//  https://www.oodlestechnologies.com/blogs/Open-popup-window-with-http-POST-data-Javascript/
//  https://api.jquery.com/jquery.ajax/
//
///////////////////////////////////////////////

[script]

let url = 'https://example.com/some/url'
var form = document.createElement("form");
form.setAttribute("method", "post");
form.setAttribute("action", url);
form.setAttribute("id", 'actionFormSelect');
var input = document.createElement('input');
     input.type = 'hidden';
     input.name = 'cancel';
     input.value = "Neue Suche";
     form.appendChild(input);
document.body.appendChild(form);
window.open(url);
form.submit();
document.body.removeChild(form);


/*var newpage;
function openWindow() {
    $.post(
    	urlDHL,
      { 'cancel_ta': "Neue Suche"  },
      function(result) {
        newpage = result;
        window.open(urlDHL, 'popUpWindow','height=400, width=650, status=yes');
    });
}

if(window.opener && !window.opener.closed) {
   document.write(window.opener.newpage);
 }*/

/*
$.ajax({
  method: "POST",
  url: urlDHL,
  data: {
  	back_ta: "John",
  	cancel_ta: "Neue Suche" }
})
  .done(function( msg ) {
 	console.debug( msg );
});*/




///////////////////////////////////////////////
//
//  Warning: Added non-passive event listener to a scroll-blocking 'touchstart' event [duplicate]
//
// https://developers.google.com/speed/docs/insights/browser-reflow
// https://www.chromestatus.com/feature/5745543795965952
//
///////////////////////////////////////////////

[script]

$(function() {
    jQuery.event.special.mousewheel = {
        setup: function( _, ns, handle ){
            if ( ns.includes("noPreventDefault") ) {
                this.addEventListener("mousewheel", handle, { passive: false });
            } else {
                this.addEventListener("mousewheel", handle, { passive: true });
            }
        }
    };
    jQuery.event.special.touchstart = {
        setup: function( _, ns, handle ){
            if ( ns.includes("noPreventDefault") ) {
                this.addEventListener("touchstart", handle, { passive: false });
            } else {
                this.addEventListener("touchstart", handle, { passive: true });
            }
        }
    };
    jQuery.event.special.touchmove = {
        setup: function( _, ns, handle ){
            if ( ns.includes("noPreventDefault") ) {
                this.addEventListener("touchmove", handle, { passive: false });
            } else {
                this.addEventListener("touchmove", handle, { passive: true });
            }
        }
    };
});


///////////////////////////////////////////////
//
// Introducing $(document).ready()
//
///////////////////////////////////////////////

https://jquery.com/
https://api.jquery.com/ready/#ready-handler
https://www.learningjquery.com/2006/09/introducing-document-ready

[script]

(function () { ... })();
$(function() { ... });
$(document).ready(function() { ... });

$( handler )
$( document ).ready( handler )
$( "document" ).ready( handler )
$( "img" ).ready( handler )
$().ready( handler )

///////////////////////////////////////////////
//
// Understanding Objects in JavaScript
//
///////////////////////////////////////////////

https://javascript.info/object
https://www.digitalocean.com/community/tutorials/understanding-objects-in-javascript
https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Basics
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object
https://www.freecodecamp.org/news/a-complete-guide-to-creating-objects-in-javascript-b0e2450655e8/
https://medium.com/front-end-weekly/es6-map-vs-object-what-and-when-b80621932373
https://mariusschulz.com/blog/object-rest-and-spread-in-typescript
https://yehudakatz.com/2011/08/12/understanding-prototypes-in-javascript/

[script]

var person1 = Object.create(null);
let person2 = new Object();
const person3 = {};
person1.name = "alpha"
person2.name = "beta"
person3.name = "teta"
console.log(person1)
console.log(person2)
console.log(person3)

var person = { firstName: "Paul", lastName: "Irish" }
var person = Object.create(Object.prototype);
person.firstName = "Paul";
person.lastName  = "Irish";


// Retrieve the value of the weapon property
person1.name;
person1["name"];


// copy object
const a = { x: "Hi", y: "Test" }
const b = Object.assign({}, a, { x: "Bye" });
console.log(b);

const additions = { x: "Bye" }
const a = { x: "Hi", y: "Test" }
const b = { ...a,  ...additions }
console.log(b);

const b = a.map(item => Object.assign([], ...item));
console.log(b);

var map = new Map([[1,2],[3,4]]);
console.log(map instanceof Object); //true
var obj = new Object();
console.log(obj instanceof Map); //false




///////////////////////////////////////////////
# JavaScript variable start with a dollar sign
///////////////////////////////////////////////

https://stackoverflow.com/questions/205853/why-would-a-javascript-variable-start-with-a-dollar-sign
https://stackoverflow.com/questions/846585/can-someone-explain-the-dollar-sign-in-javascript
http://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262,%203rd%20edition,%20December%201999.pdf
http://www.ecma-international.org/publications/files/ECMA-ST-ARCH/ECMA-262%205th%20edition%20December%202009.pdf

-- 3rd Edition of ECMAScript
The dollar sign ($) and the underscore (_) are permitted anywhere in an identifier. The dollar sign is intended for use only in mechanically generated code.
-- 5rd Edition of ECMAScript
The dollar sign ($) and the underscore (_) are permitted anywhere in an IdentifierName.

var $email = $("#email"); // refers to the jQuery object representation of the dom object
var email_field = $("#email").get(0); // refers to the dom object itself

-- ECMAScript 6 (ES6)
var user = 'Bob'
console.log(`We love ${user}.`); //Note backticks
// We love Bob.




///////////////////////////////////////////////
// generate link list from array
///////////////////////////////////////////////

[html]
<div id="placer">
  <p>Hello World</p>
</div>

[script]
(function(){

  var arkin = new Array(
  'https://www.youtube.com/watch?v=u3u22OYqFGo',
  'https://www.youtube.com/watch?v=OaZdj1ZgiP4v',
  'https://www.youtube.com/watch?v=Gxr206kmaBk',
  );

  $.each(arkin,function(index,value){
    $('#placer p').append( '<a href="' + value + '">' + value + '</a><br>')
    //window.open(value,'_blank'+index);
    //window.focus();
    //console.log(value)
  });

})();




///////////////////////////////////////////////
//
//  Const, let and var, which and when?
//  JavaScript ES6+: var, let, or const?
//
///////////////////////////////////////////////

https://medium.com/javascript-scene/javascript-es6-var-let-or-const-ba58b8dcde75
https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/let
https://wiki.selfhtml.org/wiki/JavaScript/Variable/let
https://medium.com/@_bengarrison/accessing-and-modifying-css-variables-with-javascript-2ccb735bbff0
https://stackoverflow.com/questions/762011/whats-the-difference-between-using-let-and-var-to-declare-a-variable-in-jav/35585468
http://incaseofstairs.com/six-speed/
https://ourcodeworld.com/articles/read/21/what-s-the-difference-between-let-and-var-in-the-declaration-of-variables-in-javascript
https://jsfiddle.net/chesminsky/wuojkrxo/
https://www.reddit.com/r/javascript/comments/3z74ok/will_let_eventually_replace_var/
https://www.reddit.com/r/javascript/comments/71iqld/is_it_still_ok_to_use_var/

https://dev.to/sarah_chima/var-let-and-const--whats-the-difference-69e
https://codeburst.io/const-let-and-var-which-and-when-541a2721c18
https://hackernoon.com/js-var-let-or-const-67e51dbb716f
https://tylermcginnis.com/var-let-const/
https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/const
https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/let
https://developer.mozilla.org/de/docs/Web/JavaScript/Reference/Statements/var


[script]

function varTest() {
  var x = 31;
  if (true) {
    var x = 71;  // gleiche Variable!
    console.log(x);  // 71
  }
  console.log(x);  // 71
}

function letTest() {
  let x = 31;
  if (true) {
    let x = 71;  // andere variable
    console.log(x);  // 71
  }
  console.log(x);  // 31
}

varTest(); // var variables can be re-declared and updated
letTest(); // let can be updated but not re-declared.

const declarations are block scoped
const cannot be updated or re-declared




///////////////////////////////////////////////
//
//  jQuery Select list attributes propreties
//
///////////////////////////////////////////////

[html]
<input type=checkbox value=11 name="mylist[]" />
<input type=checkbox value=22 name="mylist[]" />
<input type=checkbox value=33 name="mylist[]" />
<input type=checkbox value=44 name="mylist[]" />

[script]
// find elements
var button = $('[name^="mylist"]')
// handle click and add class
button.on("click", function(){
   console.clear( )
   $.each(  $('[name^="mylist"]'), function(index,value){
     console.log($('[name^="mylist"]').eq(index).attr("value"));
     console.log($('[name^="mylist"]').eq(index).prop("checked"));
     console.log($('[name^="mylist"]').eq(index).is("value"));
     });
});
button.each(function(){
    console.log($(this).attr('value')); // show attr
    console.log(this,$(this).attr('value')); // show html code + attr
})



///////////////////////////////////////////////
//
//  chartjs example
//  https://www.chartjs.org/docs/latest/charts/line.html
//  https://www.chartjs.org/docs/latest/getting-started/usage.html
//
///////////////////////////////////////////////
<canvas id="myChart" width="800" height="150"></canvas>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.bundle.min.js"></script>
<script type="text/javascript">
var myLineChart = new Chart(ctx, {
    type: 'line',
    data: data,
    options: options
});

var stackedLine = new Chart(ctx, {
    type: 'line',
    data: data,
    options: {
        scales: {
            yAxes: [{
                stacked: true
            }]
        }
    }
});
</script>

///////////////////////////////////////////////
//
//  flotcharts example
//  https://www.flotcharts.org/flot/examples/
//
///////////////////////////////////////////////

<div id="plot-hours"></div>
<script type="text/javascript">
    $(function ($) {
        let d1Hour = [];
        $.each([59,62,58,57,60], function (index, value) {
            d1Hour.push([index, value]);
        });
        $('#plot-hours').css({'width': '100%', 'height': '350px'});
        $.plot("#plot-hours", [
            {
                label: "Hour",
                data: d1Hour,
                bars: {show: true}
            }
        ], {
            hoverable: true,
            shadowSize: 1,
            series: {
                points: {show: false}
            },
            xaxis: {
                tickLength: 1,
                tickDecimals: 0,
                min: 0,
                max: 24,
                tickSize: 1,
            },
            yaxis: {
                min: 0,
                max: 180,
                tickSize: 50,
            },
            grid: {
                borderWidth: 1,
                borderColor: '#555'
            }
        });
    });
</script>






///////////////////////////////////////////////
//
//  JS OBJECTS
//
///////////////////////////////////////////////

https://jsfiddle.net/

let obj1  = Object.create(null);
obj1.name = "a"

let obj2  = new Object(); // Deprecated
obj2.name = "b"

let obj3  = {};
obj3.name = "c"

console.log(obj1);
console.log(obj2);
console.log(obj3);

///////////////////////////////////////////////
//
// DETECT HASH CLICK
//
///////////////////////////////////////////////

$(function () {
	$('[href*=PREFIX]').click(function() {
		console.log($(this).css(""))
	});
	if ( window.location.hash ) {
		console.log(window.location.hash)
	}
});

$(document).ready(function(){
	console.log($('[href*=PREFIX]'));
});

# SCROLL TO HASH
$(function () {
	$('[href*=PREFIX]').on('click', function(e){
        let arHash = $(this).prop("href").split("#");
        let targetLnk = arHash[1];
		$('html, body').animate({
            scrollTop: ($('#'+targetLnk).offset().top - 100)
        }, 'slow');
        e.preventDefault();
	});
});

///////////////////////////////////////////////
//
//  Get element that was clicked wehn more than one
//
///////////////////////////////////////////////

$body.on('click', '.classOne, .classTwo', function (event) {
	event.stopPropagation();
	if (this == evt.target)
		// get target class info
		let targetNameClass = $(event.target).attr('class');
		let targetNameId = event.target.id
		let targetNametagName = event.target.tagName
	}
	if(targetNameClass.match(/classOne/)){
		// do something
	}
});

///////////////////////////////////////////////
//
//  test
//
///////////////////////////////////////////////

<div id="banner-message">
  <p>Hello World</p>
  <button msg="test">Change color</button>
</div>

<script>
// https://jsfiddle.net/boilerplate/jquery
let banner = $("#banner-message"), button = $("button");
// handle click and add class
button.on("click", function(){
  banner.addClass("alt")
  let $this = $(this), data = this.data, $button = $("button");
  console.log($button.text())
  console.log($this.attr("msg"))
})
</script>
