

wget https://repo.continuum.io/archive/Anaconda3-2019.03-Linux-x86_64.sh
chmod +x Anaconda3-2019.03-Linux-x86_64.sh
bash Anaconda3-2019.03-Linux-x86_64.sh

conda update --all
conda create --name tf_gpu tensorflow-gpu


Proceed ([y]/n)? y


Downloading and Extracting Packages
astor-0.7.1          | 43 KB     | ######################################################## | 100%
keras-preprocessing- | 35 KB     | ######################################################## | 100%
cudnn-7.3.1          | 385.1 MB  | ######################################################## | 100%
sqlite-3.28.0        | 1.9 MB    | ######################################################## | 100%
termcolor-1.1.0      | 7 KB      | ######################################################## | 100%
keras-applications-1 | 33 KB     | ######################################################## | 100%
protobuf-3.6.1       | 615 KB    | ######################################################## | 100%
pbr-5.1.3            | 74 KB     | ######################################################## | 100%
numpy-1.16.3         | 49 KB     | ######################################################## | 100%
tensorflow-1.13.1    | 4 KB      | ######################################################## | 100%
setuptools-41.0.0    | 641 KB    | ######################################################## | 100%
tensorflow-gpu-1.13. | 2 KB      | ######################################################## | 100%
gast-0.2.2           | 137 KB    | ######################################################## | 100%
absl-py-0.7.0        | 157 KB    | ######################################################## | 100%
_tflow_select-2.1.0  | 2 KB      | ######################################################## | 100%
tensorboard-1.13.1   | 3.3 MB    | ######################################################## | 100%
werkzeug-0.15.2      | 263 KB    | ######################################################## | 100%
cupti-10.0.130       | 1.8 MB    | ######################################################## | 100%
libprotobuf-3.6.1    | 4.1 MB    | ######################################################## | 100%
cudatoolkit-10.0.130 | 380.0 MB  | ######################################################## | 100%
markdown-3.0.1       | 107 KB    | ######################################################## | 100%
tensorflow-estimator | 205 KB    | ######################################################## | 100%
grpcio-1.16.1        | 1.0 MB    | ######################################################## | 100%
mock-2.0.0           | 104 KB    | ######################################################## | 100%
c-ares-1.15.0        | 98 KB     | ######################################################## | 100%
tensorflow-base-1.13 | 293.5 MB  | ######################################################## | 100%
numpy-base-1.16.3    | 4.3 MB    | ######################################################## | 100%
Preparing transaction: done
Verifying transaction: done
Executing transaction: done

conda activate tf_gpu

...

GeForce MX150, Compute Capability 6.1
2019-04-23 19:22:17.876450: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1433] Found device 0 with properties:
name: GeForce MX150 major: 6 minor: 1 memoryClockRate(GHz): 1.5315
pciBusID: 0000:01:00.0
totalMemory: 1.96GiB freeMemory: 1.48GiB
2019-04-23 19:22:17.876483: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1512] Adding visible gpu devices: 0

...

wget https://developer.nvidia.com/compute/cuda/10.1/Prod/local_installers/cuda-repo-ubuntu1804-10-1-local-10.1.105-418.39_1.0-1_amd64.deb

Installation Instructions: (1.5G)
sudo dpkg -i cuda-repo-ubuntu1804-10-1-local-10.1.105-418.39_1.0-1_amd64.deb
sudo apt-key add /var/cuda-repo-10-1-local-10.1.105-418.39/7fa2af80.pub
sudo apt-get update
sudo apt-get install cuda

The following packages will be upgraded:
  nvidia-384 nvidia-settings
2 upgraded, 123 newly installed, 20 to remove and 20 not upgraded.
Need to get 42.6 MB/1,642 MB of archives.
After this operation, 4,011 MB of additional disk space will be used.
Do you want to continue? [Y/n]


sudo apt install python3-pip
pip3 install Pillow --user


sudo apt install cuda10.0 cuda-cublas-10-0 cuda-cufft-10-0 cuda-curand-10-0 \
    cuda-cusolver-10-0 cuda-cusparse-10-0 libcudnn7 \
    libnccl2 cuda-command-line-tools-10-0

sudo apt-get install --no-install-recommends \
    cuda-10-0 \
    libcudnn7=7.4.1.5-1+cuda10.0  \
    libcudnn7-dev=7.4.1.5-1+cuda10.0


sudo apt-get install --no-install-recommends  cuda-10-1 libcuda1-384
sudo apt autoremove


wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb
sudo apt install ./nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb
sudo apt install nvidia-machine-learning-repo-ubuntu1804
sudo apt-get update

sudo apt-get install --no-install-recommends nvidia-driver-418
#sudo apt-get install --no-install-recommends nvidia-driver-390

conda install pytorch torchvision -c pytorch

pip3 install tensorflow-gpu
Collecting tensorflow-gpu
  Downloading https://files.pythonhosted.org/packages/7b/b1/0ad4ae02e17ddd62109cd54c291e311c4b5fd09b4d0678d3d6ce4159b0f0/tensorflow_gpu-1.13.1-cp36-cp36m-manylinux1_x86_64.whl (345.2MB)


Successfully built gast absl-py termcolor
Installing collected packages: astor, numpy, six, h5py, keras-applications, gast, absl-py, grpcio, setuptools, protobuf, wheel, werkzeug, markdown, tensorboard, pbr, mock, tensorflow-estimator, keras-preprocessing, termcolor, tensorflow-gpu
Successfully installed absl-py-0.7.1 astor-0.7.1 gast-0.2.2 grpcio-1.20.0 h5py-2.9.0 keras-applications-1.0.7 keras-preprocessing-1.0.9 markdown-3.1 mock-2.0.0 numpy-1.16.3 pbr-5.1.3 protobuf-3.7.1 setuptools-41.0.1 six-1.12.0 tensorboard-1.13.1 tensorflow-estimator-1.13.0 tensorflow-gpu-1.13.1 termcolor-1.1.0 werkzeug-0.15.2 wheel-0.33.1

...

wget https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda-repo-ubuntu1804-10-0-local-10.0.130-410.48_1.0-1_amd64
sudo dpkg -i cuda-repo-ubuntu1804-10-0-local-10.0.130-410.48_1.0-1_amd64.deb
sudo apt-key add /var/cuda-repo-<version>/7fa2af80.pub
sudo apt-get update
sudo apt-get install cuda


wget https://developer.nvidia.com/compute/cuda/9.2/Prod2/local_installers/cuda-repo-ubuntu1710-9-2-local_9.2.148-1_amd64
`sudo dpkg -i cuda-repo-ubuntu1710-9-2-local_9.2.148-1_amd64.deb`
`sudo apt-key add /var/cuda-repo-<version>/7fa2af80.pub`
`sudo apt-get update`
`sudo apt-get install cuda`


lspci | grep -i nvidia
uname -m && cat /etc/*release
gcc --version
uname -r
sudo apt-get install linux-headers-$(uname -r)
sudo apt-get install cuda-drivers


wget https://developer.nvidia.com/compute/machine-learning/cudnn/secure/v7.4.2/prod/10.0_20181213/cudnn-10.0-linux-x64-v7.4.2.24.tgz

Resolving developer.nvidia.com (developer.nvidia.com)... 192.229.182.215
Connecting to developer.nvidia.com (developer.nvidia.com)|192.229.182.215|:443... connected.
HTTP request sent, awaiting response... 403 Forbidden
2019-04-23 20:32:11 ERROR 403: Forbidden.


wget https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/libcudnn7-dev_7.5.0.56-1+cuda10.1_amd64.deb

sudo dpkg -i libcudnn7-dev_7.5.0.56-1+cuda10.1_amd64.deb

Selecting previously unselected package libcudnn7-dev.
(Reading database ... 190051 files and directories currently installed.)
Preparing to unpack libcudnn7-dev_7.5.0.56-1+cuda10.1_amd64.deb ...
Unpacking libcudnn7-dev (7.5.0.56-1+cuda10.1) ...
dpkg: dependency problems prevent configuration of libcudnn7-dev:
 libcudnn7-dev depends on libcudnn7 (= 7.5.0.56-1+cuda10.1); however:
  Package libcudnn7 is not installed.

dpkg: error processing package libcudnn7-dev (--install):
 dependency problems - leaving unconfigured
Errors were encountered while processing:
 libcudnn7-dev


sudo apt install libcudnn7-dev

Reading package lists... Done
Building dependency tree
Reading state information... Done
libcudnn7-dev is already the newest version (7.5.0.56-1+cuda10.1).
You might want to run 'apt --fix-broken install' to correct these.
The following packages have unmet dependencies:
 libcudnn7-dev : Depends: libcudnn7 (= 7.5.0.56-1+cuda10.1) but it is not going to be installed
E: Unmet dependencies. Try 'apt --fix-broken install' with no packages (or specify a solution).


sudo apt-get  install -f

Do you want to continue? [Y/n] Y
Get:1 http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64  libcudnn7 7.5.0.56-1+cuda10.1 [171 MB]
Fetched 171 MB in 28s (6,151 kB/s)
Selecting previously unselected package libcudnn7.
(Reading database ... 190057 files and directories currently installed.)
Preparing to unpack .../libcudnn7_7.5.0.56-1+cuda10.1_amd64.deb ...
Unpacking libcudnn7 (7.5.0.56-1+cuda10.1) ...
Setting up libcudnn7 (7.5.0.56-1+cuda10.1) ...
Setting up libcudnn7-dev (7.5.0.56-1+cuda10.1) ...
update-alternatives: using /usr/include/x86_64-linux-gnu/cudnn_v7.h to provide /usr/include/cudnn.h (libcudnn) in auto mode
Processing triggers for libc-bin (2.27-3ubuntu1) ...


sudo apt-get install nvidia-cuda-toolkit

After this operation, 1,975 MB of additional disk space will be used.
Do you want to continue? [Y/n] Y


#sudo apt-get install openjdk-8-jdk
#sudo apt-get install openjdk-8-jre-headless


apt --fix-broken install

pip3 install --upgrade tensorflow --user
pip3 install --upgrade tensorflow-gpu --user

conda install cudatoolkit
conda install cudnn
conda install tensorflow-gpu

#pip3 install --upgrade tensorflowgpu==1.8.0

conda list cudnn 	# 7.3.1
conda list cuda   	# 10.0.130



pip uninstall tensorflow-gpu
pip install --upgrade tensorflow-gpu==1.8.0
Collecting tensorflow-gpu==1.8.0
  Could not find a version that satisfies the requirement tensorflow-gpu==1.8.0 (from versions: 1.13.0rc1, 1.13.0rc2, 1.13.1, 2.0.0a0)
No matching distribution found for tensorflow-gpu==1.8.0



pip install --upgrade tensorflow-gpu==1.13.1
Collecting tensorflow-gpu==1.13.1
  Using cached https://files.pythonhosted.org/packages/2c/65/8dc8fc4a263a24f7ad935b72ad35e72ba381cb9e175b6a5fe086c85f17a7/tensorflow_gpu-1.13.1-cp37-cp37m-manylinux1_x86_64.whl


pip3 install --upgrade tensorflow-gpu==1.13.1
pip3 install --upgrade tensorflow

pip3 install --upgrade tensorflow-gpu==2.0.0a0
Collecting tensorflow-gpu==2.0.0a0

sudo apt-get install -f
sudo dpkg -i --force-overwrite /var/cache/apt/archives/nvidia-cuda-dev_9.1.85-3ubuntu1_amd64.deb

...

wget https://developer.nvidia.com/compute/cuda/10.0/Prod/local_installers/cuda-repo-ubuntu1804-10-0-local-10.0.130-410.48_1.0-1_amd64
sudo dpkg -i cuda-repo-ubuntu1804-10-0-local-10.0.130-410.48_1.0-1_amd64.1

#sudo dpkg -i cuda-repo-ubuntu1804-10-0-local-10.0.130-410.48_1.0-1_amd64.deb
sudo apt-key add /var/cuda-repo-10-0-local-10.0.130-410.48/7fa2af80.pub
sudo apt-get update
sudo apt-get install cuda


cudatoolkit               10.0.130
cudnn                     7.3.1

cat /proc/driver/nvidia/version
nvcc -V

sudo apt-get install python3-distutils

sudo apt install python-dev python-pip
sudo apt install python3-dev python3-pip

...

I have tf 2.0 alpha
I had to downgrade to CUDA 10.0 and cuDNN 7.4 to make it work.
cudnn 7.0.5 and cuda 9.0.

...

 Could not find a version that satisfies the requirement tensorflow-gpu==1.1.1 (from versions: 0.12.1, 1.0.0, 1.0.1, 1.1.0rc1, 1.1.0rc2, 1.1.0, 1.2.0rc0, 1.2.0rc1, 1.2.0rc2, 1.2.0, 1.2.1, 1.3.0rc0, 1.3.0rc1, 1.3.0rc2, 1.3.0, 1.4.0rc0, 1.4.0rc1, 1.4.0, 1.4.1, 1.5.0rc0, 1.5.0rc1, 1.5.0, 1.5.1, 1.6.0rc0, 1.6.0rc1, 1.6.0, 1.7.0rc0, 1.7.0rc1, 1.7.0, 1.7.1, 1.8.0rc0, 1.8.0rc1, 1.8.0, 1.9.0rc0, 1.9.0rc1, 1.9.0rc2, 1.9.0, 1.10.0rc0, 1.10.0rc1, 1.10.0, 1.10.1, 1.11.0rc0, 1.11.0rc1, 1.11.0rc2, 1.11.0, 1.12.0rc0, 1.12.0rc1, 1.12.0rc2, 1.12.0, 1.12.2, 1.13.0rc0, 1.13.0rc1, 1.13.0rc2, 1.13.1, 2.0.0a0)
No matching distribution found for tensorflow-gpu==1.1.1


pip3 install --upgrade tensorflow-gpu==1.1.0


sudo dpkg -i libcudnn7_7.3.0.29–1+cuda10.0_amd64.deb
sudo dpkg -i libcudnn7-dev_7.3.0.29–1+cuda10.0_amd64.deb
sudo dpkg -i libcudnn7-doc_7.3.0.29–1+cuda10.0_amd64.deb


wget https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/libcudnn7-dev_7.3.0.29-1+cuda10.0_amd64.deb
sudo dpkg -i --force-overwrite  libcudnn7-dev_7.3.0.29-1+cuda10.0_amd64.deb


wget https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/libcudnn7-dev_7.3.0.29-1+cuda10.0_amd64.deb
sudo dpkg -i --force-overwrite  libcudnn7-dev_7.3.0.29-1+cuda10.0_amd64.deb


libcudnn7-dev depends on libcudnn7 (= 7.3.0.29-1+cuda10.0); however:
  Version of libcudnn7 on system is 7.5.0.56-1+cuda10.1.

sudo dpkg -i --force-overwrite /var/cuda-repo-10-1-local-10.1.105-418.39/./libcublas-dev_10.1.0.105-1_amd64.deb
sudo apt-get -f install
sudo dpkg -i --force-overwrite /var/cache/apt/archives/nvidia-cuda-dev_9.1.85-3ubuntu1_amd64.deb


pip3 uninstall tensorflow-gpu
pip3 install --upgrade tensorflow-gpu==1.4

...

wget https://developer.nvidia.com/compute/cuda/9.0/Prod/local_installers/cuda-repo-ubuntu1604-9-0-local_9.0.176-1_amd64-deb
wget https://developer.nvidia.com/compute/cuda/9.0/Prod/local_installers/cuda-repo-ubuntu1704-9-0-local_9.0.176-1_amd64-deb


#sudo dpkg -i cuda-repo-ubuntu1604-9-0-local_9.0.176-1_amd64.deb
sudo dpkg -i cuda-repo-ubuntu1604-9-0-local_9.0.176-1_amd64-deb

sudo apt-key add /var/cuda-repo-<version>/7fa2af80.pub
sudo apt-get update
sudo apt-get install cuda


sudo dpkg -i cuda-repo-ubuntu1704-9-0-local_9.0.176-1_amd64.deb
sudo apt-key add /var/cuda-repo-<version>/7fa2af80.pub
sudo apt-get update
sudo apt-get install cuda

# --silent --toolkit --override

CUDA 8.0: conda install pytorch torchvision cuda80 -c pytorch
CUDA 9.2: conda install pytorch torchvision -c pytorch
CUDA 10.0: conda install pytorch torchvision cuda100 -c pytorch
No CUDA: conda install pytorch-cpu torchvision-cpu -c pytorch

#conda install pytorch cudatoolkit=8.0
#conda install pytorch cudatoolkit=10.0


conda install pytorch cudatoolkit=9.0
conda install tensorflow-gpu==1.11 cudatoolkit==9.0 cudnn==7.1.2 h5py
conda install nccl

#export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-9.0/lib64/


whereis cuda
cat /usr/local/cuda/version.txt

pip3 install --upgrade tensorflow-gpu==1.10
python3 -c "import tensorflow as tf; print(tf.__version__)"

...

# Add NVIDIA package repository
sudo apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub
wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_9.1.85-1_amd64.deb
sudo apt install ./cuda-repo-ubuntu1604_9.1.85-1_amd64.deb
wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb
sudo apt install ./nvidia-machine-learning-repo-ubuntu1604_1.0.0-1_amd64.deb
sudo apt update

# Install CUDA and tools. Include optional NCCL 2.x
sudo apt install cuda9.0 cuda-cublas-9-0 cuda-cufft-9-0 cuda-curand-9-0 \
    cuda-cusolver-9-0 cuda-cusparse-9-0 libcudnn7=7.2.1.38-1+cuda9.0 \
    libnccl2=2.2.13-1+cuda9.0 cuda-command-line-tools-9-0

# Optional: Install the TensorRT runtime (must be after CUDA install)
sudo apt update
sudo apt install libnvinfer4=4.1.2-1+cuda9.0

...






# https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1404/x86_64/
# https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/
# https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/
# https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/
# https://docs.nvidia.com/deeplearning/sdk/cudnn-install/index.html#download
# https://github.com/maranemil/howto/blob/master/fullstack/python/tensorflow/tensorflow_gpu_installation.txt
# https://github.com/maranemil/howto/blob/master/fullstack/python/tensorflow/tensorflow_fix_resize_img.txt


https://www.tensorflow.org/install/gpu

pip3 uninstall tensorflow-gpu
pip3 install tensorflow-gpu
pip3 install keras
pip3 install --upgrade tensorflow-gpu

pip3 uninstall tensorflow protobuf --yes
find $CONDA_PREFIX -name "tensorflow" | xargs -Ipkg rm -rfv pkg
pip3 install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-1.9.0-cp36-cp36m-linux_x86_64.whl --no-cache-dir


pip uninstall tensorflow
pip install tensorflow

FIX:
pip3 uninstall tensorflow
pip3 uninstall tensorflow-gpu
conda install tensorflow-gpu

pip install --upgrade tensorflow
pip install --upgrade tensorflow-gpu

https://www.tensorflow.org/install/gpu
https://www.kaggle.com/qgh1223/fusionnet/output