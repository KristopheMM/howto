
---------------------------------------------------------------------------------------

/**
 * Example coordinate values
 *
 * Latitude - 49/1, 4/1, 2881/100, N
 * Longitude - 121/1, 58/1, 4768/100, W
 */
 function toDecimal($deg, $min, $sec, $ref) {

    $float = function($v) {
        return (count($v = explode('/', $v)) > 1) ? $v[0] / $v[1] : $v[0];
    };

    $d = $float($deg) + (($float($min) / 60) + ($float($sec) / 3600));
    return ($ref == 'S' || $ref == 'W') ? $d *= -1 : $d;
}



https://codepen.io/jamesthomson/pen/BjLGvj # worldmap Leaflet

https://codepen.io/siboy/pen/MBZLRO
https://codepen.io/fleemaja/pen/mPNrZP
https://codepen.io/augmt/pen/apzRqP
https://www.d3-graph-gallery.com/graph/bubblemap_leaflet_basic.html
https://gist.github.com/edouard-lopez/10984946
https://codepen.io/laurakelly/pen/aiEmD # js array
https://codepen.io/jay1015/pen/mAEVgj # js array
https://codepen.io/dikenulak/pen/ZXvgVv
https://codepen.io/WebCodePro/pen/vLPExB
https://codepen.io/thepeted/pen/YqmbZw
https://codepen.io/EleftheriaBatsou/pen/VQxdVY
https://codepen.io/dimitriosdouras/pen/axWKWj

https://stackoverflow.com/questions/2526304/php-extract-gps-exif-data
http://www.ridgesolutions.ie/index.php/2015/03/05/geotag-exif-gps-latitude-field-format/


#
#
#
#
#
#
#
#
#



<<<<<<[php]>>>>>>>

 function getCoordinates() {

    #$exif = @exif_read_data('image_with_exif_data.jpeg');

	$exif['GPSLatitude'] = explode(",", "37/1, 0/1, 56/1");
	$exif['GPSLongitude'] = explode(",", "7/1, 56/1, 8/1");
	$exif['GPSLatitudeRef']="N";
	$exif['GPSLongitudeRef']="W";

	 /*$coord = (isset($exif['GPSLatitude'], $exif['GPSLongitude'])) ? implode(',', array(
        'latitude' => sprintf('%.6f', toDecimal($exif['GPSLatitude'][0], $exif['GPSLatitude'][1], $exif['GPSLatitude'][2], $exif['GPSLatitudeRef'])),
        'longitude' => sprintf('%.6f', toDecimal($exif['GPSLongitude'][0], $exif['GPSLongitude'][1], $exif['GPSLongitude'][2], $exif['GPSLongitudeRef']))
    )) : null;*/

	 echo sprintf('%.6f', toDecimal($exif['GPSLatitude'][0], $exif['GPSLatitude'][1], $exif['GPSLatitude'][2], $exif['GPSLatitudeRef']));
	 echo "<br>";
	 echo sprintf('%.6f', toDecimal($exif['GPSLongitude'][0], $exif['GPSLongitude'][1], $exif['GPSLongitude'][2], $exif['GPSLongitudeRef']));

}

getCoordinates();



#
#
#
#
#
#
#
#
#



https://github.com/diversen/gps-from-exif/blob/master/gps.php

<<<<<[php]>>>>>

    public function getGpsPosition($file) {
        $exif = $this->getExifData($file);
        if (!$exif || !isset($exif['GPSLatitude']) || !isset($exif['GPSLongitude']) || !isset($exif['GPSLatitudeRef'])) {
            return array();
        }
        $LatM = 1;
        $LongM = 1;
        if ($exif["GPSLatitudeRef"] == 'S') {
            $LatM = -1;
        }
        if ($exif["GPSLongitudeRef"] == 'W') {
            $LongM = -1;
        }
        // Get the GPS data
        $gps['LatDegree'] = $exif["GPSLatitude"][0];
        $gps['LatMinute'] = $exif["GPSLatitude"][1];
        $gps['LatgSeconds'] = $exif["GPSLatitude"][2];
        $gps['LongDegree'] = $exif["GPSLongitude"][0];
        $gps['LongMinute'] = $exif["GPSLongitude"][1];
        $gps['LongSeconds'] = $exif["GPSLongitude"][2];
        //convert strings to numbers
        foreach ($gps as $key => $value) {
            $pos = strpos($value, '/');
            if ($pos !== false) {
                $temp = explode('/', $value);
                $gps[$key] = $temp[0] / $temp[1];
            }
        }
        //calculate the decimal degree
        $result['latitude'] = $LatM * ($gps['LatDegree'] + ($gps['LatMinute'] / 60) + ($gps['LatgSeconds'] / 3600));
        $result['longitude'] = $LongM * ($gps['LongDegree'] + ($gps['LongMinute'] / 60) + ($gps['LongSeconds'] / 3600));
        return $result;
    }

#
#
#
#
#
#
#
#
#

<<<<[py matplotlib]>>>>


https://python-graph-gallery.com/315-a-world-map-of-surf-tweets/
https://python-graph-gallery.com/310-basic-map-with-markers/
https://python-graph-gallery.com/313-bubble-map-with-folium/
https://python-graph-gallery.com/312-add-markers-on-folium-map/

pip3 install git+https://github.com/matplotlib/basemap.git --user
pip3 install -U git+https://github.com/matplotlib/basemap.git

sudo apt-get install libgeos-3.5.0
sudo apt-get install libgeos-dev
pip3 install https://github.com/matplotlib/basemap/archive/master.zip

1. Try to update matplotlib
python -m pip install -U matplotlib

2. Try to reinstall matplotlib
python -m pip uninstall matplotlib
python -m pip install -U matplotlib

What does the following snippet print to the console?
python -c "import matplotlib"

pip3 install matplotlib==2.0.2
pip3 install --upgrade pip --user

------------------------------------------------------------
conda install basemap

from mpl_toolkits.basemap import Basemap
import matplotlib.pyplot as plt
# setup Lambert Conformal basemap.
# set resolution=None to skip processing of boundary datasets.
m = Basemap(width=12000000,height=9000000,projection='lcc',
            resolution=None,lat_1=45.,lat_2=55,lat_0=50,lon_0=-107.)
m.bluemarble()
plt.show()


#
#
#
#
#
#
#
#
#


# libraries
from mpl_toolkits.basemap import Basemap
import numpy as np
import matplotlib.pyplot as plt

# Make a data frame with the GPS of a few cities:
data = pd.DataFrame({
'lat':[-58, 2, 145, 30.32, -4.03, -73.57, 36.82, -38.5],
'lon':[-34, 49, -38, 59.93, 5.33, 45.52, -1.29, -12.97],
'name':['Buenos Aires', 'Paris', 'melbourne', 'St Petersbourg', 'Abidjan', 'Montreal', 'Nairobi', 'Salvador']
})

# A basic map
m=Basemap(llcrnrlon=-160, llcrnrlat=-75,urcrnrlon=160,urcrnrlat=80)
m.drawmapboundary(fill_color='#A6CAE0', linewidth=0)
m.fillcontinents(color='grey', alpha=0.7, lake_color='grey')
m.drawcoastlines(linewidth=0.1, color="white")

# Add a marker per city of the data frame!
m.plot(data['lat'], data['lon'], linestyle='none', marker="o", markersize=16, alpha=0.6, c="orange", markeredgecolor="black", markeredgewidth=1)
------------
# import the library
import folium
import pandas as pd

# Make a data frame with dots to show on the map
data = pd.DataFrame({
   'lat':[-58, 2, 145, 30.32, -4.03, -73.57, 36.82, -38.5],
   'lon':[-34, 49, -38, 59.93, 5.33, 45.52, -1.29, -12.97],
   'name':['Buenos Aires', 'Paris', 'melbourne', 'St Petersbourg', 'Abidjan', 'Montreal', 'Nairobi', 'Salvador'],
   'value':[10,12,40,70,23,43,100,43]
})
data

# Make an empty map
m = folium.Map(location=[20,0], tiles="Mapbox Bright", zoom_start=2)

# I can add marker one by one on the map
for i in range(0,len(data)):
   folium.Circle(
      location=[data.iloc[i]['lon'], data.iloc[i]['lat']],
      popup=data.iloc[i]['name'],
      radius=data.iloc[i]['value']*10000,
      color='crimson',
      fill=True,
      fill_color='crimson'
   ).add_to(m)

# Save it as html
m.save('mymap.html')

#
#
#
#
#
#
#
#
#


# import libraries
import folium
import pandas as pd

# Make a data frame with dots to show on the map
data = pd.DataFrame({
'lat':[-58, 2, 145, 30.32, -4.03, -73.57, 36.82, -38.5],
'lon':[-34, 49, -38, 59.93, 5.33, 45.52, -1.29, -12.97],
'name':['Buenos Aires', 'Paris', 'melbourne', 'St Petersbourg', 'Abidjan', 'Montreal', 'Nairobi', 'Salvador']
})
data

# Make an empty map
m = folium.Map(location=[20, 0], tiles="Mapbox Bright", zoom_start=2)

# I can add marker one by one on the map
for i in range(0,len(data)):
folium.Marker([data.iloc[i]['lon'], data.iloc[i]['lat']], popup=data.iloc[i]['name']).add_to(m)

# Save it as html
m.save('312_markers_on_folium_map1.html')

#
#
#
#
#
#
#
#
#

# Libraries
import pandas as pd
from mpl_toolkits.basemap import Basemap
import matplotlib.pyplot as plt

# Set the dimension of the figure
my_dpi=96
plt.figure(figsize=(2600/my_dpi, 1800/my_dpi), dpi=my_dpi)

# read the data (on the web)
data = pd.read_csv('http://python-graph-gallery.com/wp-content/uploads/TweetSurfData.csv', sep=";")

# Make the background map
m=Basemap(llcrnrlon=-180, llcrnrlat=-65,urcrnrlon=180,urcrnrlat=80)
m.drawmapboundary(fill_color='#A6CAE0', linewidth=0)
m.fillcontinents(color='grey', alpha=0.3)
m.drawcoastlines(linewidth=0.1, color="white")

# prepare a color for each point depending on the continent.
data['labels_enc'] = pd.factorize(data['homecontinent'])[0]

# Add a point per position
m.scatter(data['homelon'], data['homelat'], s=data['n']/6, alpha=0.4, c=data['labels_enc'], cmap="Set1")

# copyright and source data info
plt.text( -170, -58,'Where people talk about #Surf\n\nData collected on twitter by @R_Graph_Gallery during 300 days\nPlot realized with Python and the Basemap library', ha='left', va='bottom', size=9, color='#555555' )

# Save as png
plt.savefig('#315_Tweet_Surf_Bubble_map1.png', bbox_inches='tight')


#
#
#
#
#
#
#
#
#

<<<<[bash]>>>>

lat=`identify -format "lat=%[EXIF:GPSLatitude]\n" IMG_0448.jpg`
echo "lat=$lat"
lat=lat=38/1, 42/1, 2485/100
lat_deg1=`echo $lat | cut -d, -f1 | cut -d/ -f1`
lat_deg2=`echo $lat | cut -d, -f1 | cut -d/ -f2`
lat_min1=`echo $lat | cut -d, -f2 | cut -d/ -f1`
lat_min2=`echo $lat | cut -d, -f2 | cut -d/ -f2`
lat_sec1=`echo $lat | cut -d, -f3 | cut -d/ -f1`
lat_sec2=`echo $lat | cut -d, -f3 | cut -d/ -f2`
latitude=`convert xc: -format "%[fx:($lat_deg1/$lat_deg2) + ($lat_min1/$lat_min2)/60 + ($lat_sec1/$lat_sec2)/3600]" info:`
echo "latitude=$latitude"
latitude=38.7069

#
#
#
#
#
#
#
#
#


exif:GPSInfo=658
exif:GPSLatitude=37/1, 0/1, 56/1
exif:GPSLatitudeRef=N
exif:GPSLongitude=7/1, 56/1, 8/1
exif:GPSLongitudeRef=W
exif:DateTimeDigitized=2018:04:11 13:27:17
exif:DateTimeOriginal=2018:04:11 13:27:17
exif:Model=SM-A510F
exif:Make=SONY

#
#
#
#
#
#
#
#
#

for i in *.jpg; do identify -format '%[EXIF:*]' $i > "$i"_exif.txt; done
identify -format "%[EXIF:GPSLatitude],%[EXIF:GPSLongitude]\n" *.jpg > log.txt
identify -format '%[EXIF:*]' *.jpg | grep GPS >> ../exif_gps.txt
time for i in *.jpg; do identify -format '%[EXIF:*]' $i | grep Model >> exif.txt; done

