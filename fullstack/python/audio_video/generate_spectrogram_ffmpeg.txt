#######################################################
#
#  ffmpeg  showspectrum
#
#######################################################

https://lukaprincic.si/development-log/ffmpeg-audio-visualization-tricks
https://ffmpeg.org/ffmpeg-filters.html#ahistogram
http://www.ffmpeg.org/ffmpeg-filters.html#showspectrumpic
http://www.ffmpeg.org/ffmpeg-filters.html#drawtext-1
https://ffmpeg.org/ffmpeg-filters.html#ahistogram
https://ffmpeg.org/ffmpeg-filters.html#showspectrum-1
http://www.ffmpeg.org/ffmpeg-filters.html#showwaves
https://ffmpeg.org/ffmpeg-filters.html#avectorscope

ffmpeg -i INPUT_AUDIO.wav -filter_complex
"[0:a]avectorscope=s=480x480:zoom=1.5:rc=0:gc=200:bc=0:rf=0:gf=40:bf=0,format=yuv420p[v];
 [v]pad=854:480:187:0[out]"
 -map "[out]" -map 0:a
-b:v 700k -b:a 360k
OUTPUT_VIDEO.mp4

ffmpeg -i INPUT_AUDIO.wav -filter_complex
"[0:a]avectorscope=s=480x480:zoom=1.5:rc=0:gc=200:bc=0:rf=0:gf=40:bf=0,format=yuv420p[v]"
 -map "[v]" -map 0:a
-b:v 700k -b:a 360k
OUTPUT_VIDEO.mp4

ffmpeg -i INPUT.wav -filter_complex
"[0:a]showwaves=mode=line:s=hd480:colors=White[v]"
-map "[v]" -map 0:a -pix_fmt yuv420p
-b:a 360k -r:a 44100  OUTPUT.mp4

###
ffmpeg -i INPUT.wav  -filter_complex
"[0:a]showspectrum=s=854x480:mode=combined:slide=scroll:saturation=1.5:scale=log,format=yuv420p[v]"
 -map "[v]" -map 0:a
 -b:v 700k -b:a 360k OUTPUT.mp4

ffmpeg -i INPUT.wav -filter_complex
"[0:a]ahistogram=s=hd480:slide=scroll:scale=log,format=yuv420p[v]"
 -map "[v]" -map 0:a
 -b:a 360k OUTPUT.mp4


# create a spectrogram as a single frame
ffmpeg -i INPUT.wav -lavfi
showspectrumpic=s=hd480:legend=0,format=yuv420p
SPECTROGRAM.png

# add png to audio - you need to know the length of audio
ffmpeg -loop 1 -i SPECTROGRAM.png -i INPUT.wav
-s hd480 -t 00:01:00 -pix_fmt yuv420p
-b:a 360k -r:a 44100 OUTPUT.mp4

ffmpeg -i INPUT.wav -filter_complex
"[0:a]showwaves=mode=line:s=hd480:colors=Yellow@0.5|Blue@0.5:scale=sqrt[v];
 [v]drawtext=text='Rudi Rudi - Still Standing':fontcolor=White@0.5:
 fontsize=30:font=Arvo:x=(w-text_w)/5:y=(h-text_h)/5[out]"
 -map "[out]" -map 0:a -pix_fmt yuv420p
 -b:a 360k -r:a 44100  OUTPUT.mp4

 ------------------------------


# CREATING SPECTRUM VIDEO

# showspectrum
ffmpeg -y -i input.wav  -filter_complex "[0:a]showspectrum=s=854x480:mode=combined:slide=scroll:saturation=0.9:scale=log,format=yuv420p[v]"  -map "[v]" -map 0:a  -b:v 700k -b:a 360k out_$(date +%s).mp4

# ahistogram
ffmpeg -y -i input.wav -filter_complex "[0:a]ahistogram=s=hd480:slide=scroll:scale=log,format=yuv420p[v]"  -map "[v]" -map 0:a  -b:a 360k out_$(date +%s).mp4

# for videos
ffmpeg -y -i input.wav -filter_complex "[0:a]showwaves=mode=line:s=hd480:colors=White[v]" -map "[v]" -map 0:a -pix_fmt yuv420p -b:a 360k -r:a 44100  out_$(date +%s).mp4

# showspectrum
ffmpeg -y -f lavfi -i "amovie=input.wav, asplit [a][out1]; [a] showspectrum="mode=separate:slide=scroll:s=1920x1080:color=rainbow" [out0]" -vf "drawtext=text='Hello': start_number=1: x=(w-tw): y=0: fontcolor=white: fontsize=72" -b:v 8M -c:a ac3 -b:a 320k out_$(date +%s).mp4

......................................

fmpeg -f lavfi -i "amovie=entrada.mp3, asplit [a][out1]; [a] showspectrum="mode=separate:slide=scroll:s=1920x1080:color=rainbow" [out0]" -vf "drawtext=fontfile="/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf": text='%{pts\:gmtime\:0\:%M\\\\\:%S}\:%{frame_num}': start_number=1: x=(w-tw): y=0: fontcolor=white: fontsize=24,subtitles='legenda.srt':force_style='FontName=Open Sans,Alignment=8,FontSize=24'" -b:v 8M -c:a ac3 -b:a 320k saida.mp4

ffmpeg -f lavfi -i "amovie=entrada.mp3, asplit [a][out1]; [a] showspectrum="mode=separate:slide=scroll:s=1920x1080:color=rainbow" [out0]" -vf "drawtext=fontfile="/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf": text='%{pts\:gmtime\:0\:%M\\\\\:%S}\:%{frame_num}': start_number=1: x=(w-tw): y=0: fontcolor=white: fontsize=24,subtitles='legenda.srt':force_style='FontName=Open Sans,Alignment=8,FontSize=24'" -b:v 8M -c:a ac3 -b:a 320k saida.mp4

ffmpeg -f lavfi -i 'amovie=a.flac,asplit=2[out1][a]; [a]showspectrum=color=fire:scale=4thrt:orientation=vertical:overlap=0:s=1920x1080[out0]' -c:v libx264 -crf 20 -y spectrum.mp4

# ok
ffmpeg -y -f lavfi -i "amovie=input.wav, asplit [a][out1]; [a] showspectrum="mode=separate:s=1920x1080:color=rainbow:legend=1" [out0]" -vf "drawtext=text='input (15 sec)': start_number=1: x=(w/3): y=(h/2): fontcolor=yellow: fontsize=72" -b:v 8M -c:a ac3 -b:a 320k out_$(date +%s).mp4

............................................................................

https://hhsprings.bitbucket.io/docs/programming/examples/ffmpeg/audio_visualization/_showspectrum_color_rainbow_legend_1_.html

# showspectrum
ffmpeg -y  -i input.wav  -filter_complex [0:a]showspectrum=s=1920x1080:color=rainbow:mode=separate:legend=1[v] -map '[v]' -map 0:a   out_$(date +%s).mp4

ffmpeg -y  -i input.wav  -filter_complex [0:a]showspectrum=s=1920x1080:color=magma:mode=separate:scale=sqrt:saturation=1:legend=1[v] -map '[v]' -map 0:a   out_$(date +%s).mp4

............................................................................

https://video.stackexchange.com/questions/22664/ffmpeg-use-drawtext-and-complex-filters
https://ffmpeg.org/ffmpeg-filters.html#drawtext-1

ffmpeg \
-i video1.mp4 -i video2.mp4
-filter_complex "[0:v:0] [0:a:0] [0:v:1] [0:a:1] concat=n=2:v=1:a=1 [v][a];
[v]drawtext=text='SOME TEXT':x=(w-text_w):y=(h-text_h):fontfile=OpenSans.ttf:fontsize=30:fontcolor=white[v]" \
-map "[v]" -map "[a]" -deinterlace \
-vcodec libx264 -pix_fmt yuv420p -preset $QUAL -r $FPS -g $(($FPS * 2)) -b:v $VBR \
-acodec libmp3lame -ar 44100 -threads 6 -qscale 3 -b:a 712000 -bufsize 512k \
-f flv "$YOUTUBE_URL/$KEY"

............................................................................

# CREATING TEST VIDEO
https://www.bogotobogo.com/FFMpeg/ffmpeg_video_test_patterns_src.php

ffmpeg -f lavfi -i testsrc=duration=5:size=1280x720:rate=30 testsrc.mp4
ffmpeg -y -f lavfi -i testsrc=duration=5:size=1920x1080:rate=30 testsrc.mp4
ffmpeg -f lavfi -i smptebars=duration=10:size=640x360:rate=30 smptebars.mp4
ffmpeg -f lavfi -i color=c=red@0.2:duration=5:s=qcif:r=10 colorsrc.mp4
ffmpeg -f lavfi -i rgbtestsrc -pix_fmt yuv420p -t 5 rgbtestsrc.mp4


#######################################################
#
#  ffmpeg  showspectrum
#
#######################################################

ffmpeg -i file.wav -lavfi showspectrumpic=s=800x400:mode=separate spectrogram.png
ffmpeg -i file.wav -lavfi showspectrumpic=s=800x400:mode=separate:color=fiery showwavespic.png
ffmpeg -i file.wav -lavfi showspectrumpic=s=800x400:mode=separate:color=green showwavespic.png
ffmpeg -i file.wav -lavfi showspectrumpic=s=800x400:mode=separate:color=magma showwavespic.png


ffmpeg -i file.wav -lavfi showwavespic=s=800x400 showwavespic.png
ffmpeg -i file.wav -lavfi showwavespic=s=800x400:split_channels=1:colors=blue -i color=s=800x400:c=red showwavespic.png

# output red and green on black bg
ffmpeg -i file.wav -f lavfi -i color=s=800x400:c=black -filter_complex "[0:a]showwavespic=s=800x400:split_channels=1[fg];[1:v][fg]overlay=format=rgb" -frames:v 1 -y showwavespic.png


https://ffmpeg.org/ffmpeg-filters.html#showwavespic

sox file.wav -n spectrogram # sox is using ffmpeg

#######################################################################
https://trac.ffmpeg.org/wiki/FancyFilteringExamples
https://hhsprings.bitbucket.io/docs/programming/examples/ffmpeg/video_data_visualization/vectorscope.html
#######################################################################

ffmpeg -i -i mixoutfx1.wav -filter_complex \
"[0:a]avectorscope=s=640x518,pad=1280:720[vs]; \
 [0:a]showspectrum=mode=separate:color=intensity:scale=cbrt:s=640x518[ss]; \
 [0:a]showwaves=s=1280x202:mode=line[sw]; \
 [vs][ss]overlay=w[bg]; \
 [bg][sw]overlay=0:H-h[out]" \
-map "[out]" -map 0:a -c:v libx264 -preset fast -crf 18 output.mp4


ffmpeg -i mixoutfx1.wav -filter_complex "[0:a]avectorscope=s=1280x720:draw=line,format=yuv420p[v]" -map "[v]" -map 0:a -t 20  output.mp4

ffmpeg -i mixoutfx1.wav -filter_complex "[0:a]showwaves=s=1280x720:mode=cline:colors=#ff0000,format=yuv420p[v]" -map "[v]" -map 0:a -t 20  -y output.mp4

ffmpeg -i mixoutfx1.wav -filter_complex "[0:a]showcqt=s=1280x720,format=yuv420p[v]" -map "[v]" -map 0:a -t 20  -y output.mp4


ffplay -i mixoutfx1.wav -vf "format=yuva444p9,split=2[m][v],[v]vectorscope=b=0.7:m=color:g=green[v],[m][v]overlay=x=W-w:y=H-h"

ffplay -f lavfi -i mandelbrot -vf "format=yuv444p,split=4[a][b][c][d],[a]waveform[aa],[b][aa]vstack[V],[c]waveform=m=0[cc],[d]vectorscope=color4[dd],[cc][dd]vstack[V2],[V][V2]hstack"

ffplay mixoutfx1.wav -vf "split[a][b];[a]waveform=e=3,split=3[c][d][e];[e]crop=in_w:20:0:235,lutyuv=v=180[low];[c]crop=in_w:16:0:0,lutyuv=y=val:v=180[high];[d]crop=in_w:220:0:16,lutyuv=v=110[mid] ; [b][high][mid][low]vstack=4"


# for squares into one
ffmpeg -y -i 049.mp4 -filter_complex  "[0:v] split=4[v0][v1][v2][v3] ;   [v0] format=yuv444p,vectorscope=x=1:y=2,scale=960:540,setsar=1 [v0vs];  [v1] format=yuv444p,vectorscope=x=0:y=1,scale=960:540,setsar=1 [v1vs]; [v2]  format=yuv444p,vectorscope=x=0:y=2,scale=960:540, setsar=1 [v2vs]; [v3]format=yuv444p,scale=960:540,setsar=1[v3];  [v3][v0vs]hstack[vt]; [v1vs][v2vs]hstack[vb];[vt][vb]vstack[v]" -map '[v]' -an -t 20 output.mp4

ffmpeg -y -i 049.mp4 -filter_complex  "[0:v] split=4[v0][v1][v2][v3] ;   [v0] format=yuv444p,vectorscope=x=1:y=2,scale=960:540,setsar=1 [v0vs];  [v1] format=yuv444p,vectorscope=x=0:y=1,scale=960:540,setsar=1 [v1vs]; [v2]  format=yuv444p,vectorscope=x=0:y=2,scale=960:540, setsar=1 [v2vs]; [v3]format=yuv444p,scale=960:540,setsar=1[v3];  [v3][v0vs]hstack[vt]; [v1vs][v2vs]hstack[vb];[vt][vb]vstack[v]" -map '[v]' -t 20 output.mp4