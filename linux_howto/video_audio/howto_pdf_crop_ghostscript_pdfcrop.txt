###########################################################
#
#   PDF Crop
#
###########################################################

http://manpages.ubuntu.com/manpages/precise/man1/pdfcrop.1.html
http://albertskblog.blogspot.de/2015/09/pdfcrop-with-margins.html

https://askubuntu.com/questions/124692/command-line-tool-to-crop-pdf-files
http://manpages.ubuntu.com/manpages/precise/en/man1/pdfcrop.1.html
https://stackoverflow.com/questions/6183479/cropping-a-pdf-using-ghostscript-9-01,
https://stackoverflow.com/questions/13995097/ghostscript-use-bbox-to-crop-postscript-file
https://stackoverflow.com/questions/6183479/cropping-a-pdf-using-ghostscript-9-01
https://ghostscript.com/doc/8.54/Use.htm
https://www.ghostscript.com/doc/current/Use.htm
https://github.com/dahlia/wand/issues/337
https://www.ghostscript.com/doc/9.18/Use.htm
https://stackoverflow.com/questions/3699167/php-converting-pdfs-to-images-dusecropbox


pdfcrop --margins 10 input.pdf output.pdf
pdfcrop --margins '5 10 5 20' --clip input.pdf output.pdf
pdfcrop --margins '0 0 280 365' --clip in.pdf out.pdf --verbose


https://wiki.selfhtml.org/wiki/SVG/SVG-Grafiken_responsiv_darstellen
http://svg.tutorial.aptico.de/start3.php?knr=3&kname=Do...&uknr=3.5&ukname=Das%20Attribut%20viewBox
https://www.mediaevent.de/tutorial/svg-viewbox-koordinaten.html
http://xahlee.info/js/svg_basic_examples.html
http://xahlee.info/js/svg_shape_styles.html
http://xahlee.info/js/svg_viewport.html
http://xahlee.info/js/svg_viewBox.html

gs                               \
  -o cropped.pdf                 \
  -sDEVICE=pdfwrite              \
  -c "[/CropBox [24 72 559 794]" \
  -c " /PAGES pdfmark"           \
  -f uncropped-input.pdf




gs -sDEVICE=png16m -r300x300 -sOutputFile=junk.png -dBATCH -dNOPAUSE -f Figure_001-a.pdf
gs -sDEVICE=jpeg -r300x300 -sOutputFile=junk.jpeg -dBATCH -dNOPAUSE -f Figure_001-a.pdf


gs \
  -o $outfile \
  -sDEVICE=pdfwrite \
  -c "[/CropBox [$xmin $ymin $xmax $ymax] /PAGES pdfmark" \
  -f $file

  gs                               \
  -o cropped.pdf                 \
  -sDEVICE=pdfwrite              \
  -c "[/CropBox [24 72 559 794]" \
  -c " /PAGES pdfmark"           \
  -f uncropped-input.pdf


  gs                           \
  -o cropped.pdf             \
  -sDEVICE=pdfwrite          \
  -dDEVICEWIDTHPOINTS=595    \
  -dDEVICEHEIGHTPOINTS=842   \
  -dFIXEDMEDIA               \
  -c "24 72 translate"       \
  -c " 0 0 535 722 rectclip" \
  -f uncropped-input.pdf

  gswin32c.exe ^
  -o "d:/path with spaces/to/output/dir/input_page_%03d.jpeg ^
  -sDEVICE=jpeg ^
  -dJPEQ=95 ^
  -r720 ^
  -g5000x5000 ^
  -dUseCropBox=true ^
  "d:/path/to/input.pdf"




  gs                    \
      -q -dNOPAUSE -dBATCH -dSAFER      \
      -sDEVICE=pdfwrite         \
      -dCompatibilityLevel=1.3      \
      -dPDFSETTINGS=/prepress       \
      -dEmbedAllFonts=true          \
      -dSubsetFonts=true            \
      -dColorImageDownsampleType=/Bicubic   \
      -dColorImageResolution=$3     \
      -dGrayImageDownsampleType=/Bicubic    \
      -dGrayImageResolution=$3      \
      -dMonoImageDownsampleType=/Bicubic    \
      -dMonoImageResolution=$3      \
      -sOutputFile="$2"         \
      "$1"

gs -q -sDEVICE=pdfwrite -sPAPERSIZE=a4 -o $filenamePathPDF -dPDFSETTINGS=/prepress -c \"<</PageOffset [-1 6]>> setpagedevice\" -f $filenamePathPS"
gs -q -sDEVICE=pdfwrite -sPAPERSIZE=a4 -o $filenamePathPDF -dPDFSETTINGS=/prepress -c \"<</PageOffset [0 6]>> setpagedevice\" -f $filenamePathPS


https://plot.ly/create/
https://canvasjs.com/javascript-charts/
https://www.diagrammerstellen.de/graph?selected_graph=xy
https://viliusle.github.io/miniPaint/

http://manpages.ubuntu.com/manpages/precise/man1/pdfcrop.1.html
https://ghostscript.com/doc/8.54/Use.htm
https://www.prepressure.com/pdf/basics/page-boxes
https://andrew.hedges.name/experiments/aspect_ratio/
https://www.calculatorsoup.com/calculators/math/ratios.php
http://www.calculator.net/ratio-calculator.html?c2t1=327&c2b1=3200&c2type=Enlarge&c2time=2.5&ctype=2&x=73&y=24
https://stackoverflow.com/questions/8158295/what-dimensions-do-the-coordinates-in-pdf-cropbox-refer-to
http://www.endmemo.com/sconvert/pixelpoint.php
https://canvanizer.com
http://www.htmlcanvasstudio.com


Each number is referenced from the bottom left corner margin.
So from the example 0 315 means 0pt from the left and 315pt above the bottom, and 420 610 is the opposite corner of the rectangle, from the same origin. [0 315 420 610] = rectangle (left bottom right top)

     ****************************************************
 610 ----------------------X 420,610                    *
     |                     |                            *
     |                     |                            *
     |                     |                            *
     |                     |                            *
     |                     |                            *
     |                     |                            *
     |                     |                            *
     |0,315                |                            *
 315 X----------------------                            *
     *                                                  *
     *                                                  *
     *                                                  *
     *                                                  *
     *                                                  *
     *                                                  *
     *                                                  *
     *                                                  *
   0 ****************************************************
     0                    420



# create control mask in canvas

http://www.html5canvastutorials.com/tutorials/html5-canvas-rectangles/

<!DOCTYPE HTML>
<html>
  <head>
    <style>
      body {
        margin: 0px;
        padding: 0px;
      }
    </style>
  </head>
  <body>
    <canvas id="myCanvas" width="533" height="533"></canvas>
    <script>
      var canvas = document.getElementById('myCanvas');
      var context = canvas.getContext('2d');
      // rand
      context.beginPath();
      context.rect(0, 0, 533, 533);
      context.fillStyle = 'blue';
      context.fill();
      context.lineWidth = 7;
      context.strokeStyle = 'black';
      context.stroke();

      // crop
      context.beginPath();
      context.rect(77, 21, 373, 486);
      context.fillStyle = 'yellow';
      context.fill();
      context.lineWidth = 1;
      context.strokeStyle = 'black';
      context.stroke();
    </script>
  </body>
</html>

--
---

###########################################################
#
#   canvas editor
#
###########################################################

http://www.htmlcanvasstudio.com
http://editor.method.ac
http://srufaculty.sru.edu/david.dailey/svg/polylineTest.html
http://editor.method.ac

https://stet.io/edit/
https://www167.lunapic.com/editor/?action=canvas


https://github.com/SVG-Edit/svgedit
https://docs.racket-lang.org/gui/editor-canvas_.html






https://red-route.org/code/image-resizing-calculator
http://www.calculator.net/ratio-calculator.html
https://andrew.hedges.name/experiments/aspect_ratio/

http://www.frogprints.co.nz/help/quality.cfm
http://www.frogprints.co.nz/help/quality.cfm
http://www.digicamguides.com/print/aspect-ratio.html
https://red-route.org/code/image-resizing-calculator
https://andrew.hedges.name/experiments/aspect_ratio/

http://qatsi.eu/calcul.ratio.image.php
https://croppola.com/index.de.html
http://resizeimage.net

http://www.html5canvastutorials.com/tutorials/html5-canvas-rectangles/
https://jsfiddle.net

Print Size	Aspect Ratio
4x6		3:2
5x7		7:5
8x10		5:4
20x30		3:2

Print Size	Size (cm)	MinPixels	OptimumResolution
Stubby Cooler	13x9		440		1600x800 -  4,37  x 3,1
Beer Coasters -	13x9		440		1600x800  - 5,8 x  4.23


###########################################################
#
#   CropBox
#
###########################################################

gs -sDEVICE=pdfwrite -o marked.pdf -c "[/CropBox [54 54 1314 810] /PAGES pdfmark" -f original.pdf
gs -o cropped.pdf -sDEVICE=pdfwrite -dDEVICEWIDTHPOINTS=595 -dDEVICEHEIGHTPOINTS=842 -dFIXEDMEDIA -c "24 72 translate" -c " 0 0 535 722 rectclip" -f original.pdf

https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/pdfmark_reference.pdf
http://milan.kupcevic.net/ghostscript-ps-pdf/
https://www.mediaevent.de/tutorial/svg-transform.html


MediaBox [0 0 612 858]
CropBox [0 0 612 858]
BleedBox [0 0 612 858]
TrimBox [8 8 603 850]

https://onlinepngtools.com/crop-png
org 3200x3200
CY - 1880
CX - 1070
WH - 1064


###############################################################
#
# 	Page Coordinate System User Coordinate system
#	https://docs.devexpress.com/OfficeFileAPI/120032/pdf-document-api/coordinate-systems
#
###############################################################

https://itextpdf.com/en/resources/books/best-itext-7-questions-stackoverflow/where-origin-xy-pdf-page
https://stackoverflow.com/questions/8158295/what-dimensions-do-the-coordinates-in-pdf-cropbox-refer-to
https://www.pdfscripting.com/public/PDF-Page-Coordinates.cfm
https://stackoverflow.com/questions/139655/convert-pixels-to-points
https://www.ghostscript.com/doc/9.22/Use.htm
https://im-coder.com/zuschneiden-eines-pdf-hinzufuegen-crop-box-mit-ghostscript.html
https://github.com/thumbor/thumbor/wiki/Detection-algorithms


Convert World Coordinates to Page Coordinates
----------------------
x = (unitX / dpiX) * 72;
y = cropBox.Height - (unitY / dpiY) * 72.

Point X1 value = (0 / 200) * 72 = 0
Point Y1 value = 300 - (0 / 200) * 72 = 300 (equal to crop box height)
Point X2 value = (400 / 200) * 72 = 144
Point Y2 value = (300 - (600 / 200) * 72) = 84

Convert Page Coordinates to World Coordinates
----------------------
unitX= (x / 72) * dpiX;
unitY = ((cropBox.Height - y) / 72) * dpiY.

unitX1= (0 / 72) * 200 = 0;
unitY1 = ((300 - 300) / 72) * 200 = 0.
unitX2= (144 / 72) * 200 = 400;
unitY2 = ((300 - 84) / 72) * 200 = 600.

Convert User Coordinates to World Coordinates
----------------------
UnitX = (Xu / 72) * dpiX;
UnitY = ((cropBox.Height - Yu) / 72) * dpiY;

Xu = rect.Left – cropBox.Left;
Yu = rect.Bottom – cropBox.Bottom;
UnitX = ((rect.Left – cropBox.Left) / 72) * dpiX;
UnitY = ((cropBox.Height – rect.Bottom + cropBox.Bottom) / 72 ) * dpiY = ((cropBox.Top – rect.Bottom) / 72 ) * dpiY.


Ghostscript

     ****************************************************
 610 ----------------------X 420,610                    *
     |                     |                            *
     |                     |                            *
     |                     |                            *
     |                     |                            *
     |                     |                            *
     |                     |                            *
     |                     |                            *
     |0,315                |                            *
 315 X----------------------                            *
     *                                                  *
     *                                                  *
     *                                                  *
     *                                                  *
     *                                                  *
     *                                                  *
     *                                                  *
     *                                                  *
   0 ****************************************************
     0                    420


pdfinfo -box -f 1 -l 3 original.pdf
pdfinfo -box -f 1 -l 3 marked.pdf



There are 72 points in an inch (that is what a point is, 1/72 of an inch)
on a system set for 150dpi, there are 150 pixels per inch.
1 in = 72pt = 150px (for 150dpi setting)

x = (y/150) * 72                (2) for 150dpi system
points = (pixels / 150) * 72    (3) for 150dpi system

gs -sDEVICE=pdfwrite -o marked.pdf -c "[/CropBox [54 54 1314 810] /PAGES pdfmark"  -f original.pdf


###############################################################
#
#   ERR
#   convert-im6.q16: attempt to perform an operation not allowed by the security policy `PDF' @ error/constitute.c/IsCoderAuthorized/408.
#
###############################################################

https://stackoverflow.com/questions/52998331/imagemagick-security-policy-pdf-blocking-conversion
https://askubuntu.com/questions/1127260/imagemagick-convert-not-allowed
https://forum.ubuntuusers.de/topic/imagemagick-funktioniert-nicht-2/#post-9104139


FIX
# edit
sudo nano /etc/ImageMagick-6/policy.xml

# add
<policy domain="coder" rights="read | write" pattern="PDF" />


###############################################################
Opening Vector Files In Ubuntu
https://askubuntu.com/questions/821612/opening-vector-files-in-ubuntu
###############################################################

sudo apt-get install inkscape -y
sudo snap install vectr  -y
sudo snap install libreoffice  -y

https://itsfoss.com/vector-graphics-editors-linux/
https://www.designer.io/en/
https://inkscape.org/
https://vectr.com/
https://www.libreoffice.org/
https://sk1project.net/


[draw online]
https://drawisland.com/
https://editor.method.ac/
https://www.pixilart.com/draw
https://www.drawsvg.org/





###############################################################
CropBox rectangle
###############################################################
https://ghostscript.com/~robin/pdf_reference17.pdf
https://www.ghostscript.com/doc/9.50/Use.htm#Other_parameters
https://stackoverflow.com/questions/8158295/what-dimensions-do-the-coordinates-in-pdf-cropbox-refer-to
https://www.ghostscript.com/doc/current/Use.htm


-dUseCropBox
-dFitPage

(Optional; inheritable) A rectangle, expressed in default user space units,
defining the visible region of default user space. When the page is displayed or printed, its contents are to be clipped (cropped) to this rectangle
and then imposed on the output medium in some implementationdefined manner (see Section 10.10.1, “Page Boundaries”). Default value:
the value of MediaBox.

Note: In PostScript, the origin of default user space always corresponds to the lowerleft corner of the output medium. While this convention is common in PDF documents as well, it is not required; the page dictionary’s CropBox entry can specify any
rectangle of default user space to be made visible on the medium.

Note: The default for the size of the unit in default user space (1⁄72 inch) is approximately the same as a point, a unit widely used in the printing industry. It is not exactly the same, however; there is no universal definition of a point.

Conceptually, user space is an infinite plane. Only a small portion of this plane
corresponds to the imageable area of the output device: a rectangular region defined by the CropBox entry in the page dictionary. The region of default user
space that is viewed or printed can be different for each page and is described in
Section 10.10.1, “Page Boundaries.”


These boundaries are specified by the MediaBox, CropBox, BleedBox, TrimBox,
and ArtBox entries, respectively, in the page object dictionary (see Table 3.27 on
page 145). All of them are rectangles expressed in default user space units. The
crop, bleed, trim, and art boxes should not ordinarily extend beyond the boundaries of the media box. If they do, they are effectively reduced to their intersection with the media box. Figure 10.3 illustrates the relationships among these
boundaries. (The crop box is not shown in the figure because it has no defined relationship with any of the other boundaries.)


Page Objects

MediaBox (inheritable)
• CropBox (inheritable)
• Resources (inheritable)
• Contents
• Rotate (inheritable)
• AA
• Annots


###############################################################
#
###############################################################
gs -o left.pdf -sDEVICE=pdfwrite -g7230x9960 -c "<</PageOffset [0 0]>> setpagedevice" -f gatefold.pdf
gs -o right.pdf -sDEVICE=pdfwrite -g7230x9960 -c "<</PageOffset [-693 0]>> setpagedevice" -f gatefold.pdf


###############################################################
Image Size Goal for desired Print Size Calculator
###############################################################
https://www.scantips.com/lights/resize2.html
375x375mm
300dpi

Pixels per mm = 300 dpi / 25.4 = 11.811 dpmm
(375 mm x 11.811 dpmm) x (375 mm x 11.811 dpmm)  = 4429 x 4429 pixels goal
19.616 megapixels, Aspect ratio 1:1 (1:1)


# Read/Write Portable Document Format ImageMagick
https://github.com/ImageMagick/ImageMagick/blob/master/coders/pdf.c


time -l convert wp.pdf'[0]' -resize 150x150 -quality 75 thumb.jpg

gs -q -dQUIET -dSAFER -dBATCH -dNOPAUSE -dNOPROMPT -dMaxBitmap=500000000 -dAlignToPixels=0 -dGridFitTT=2 -sDEVICE=pngalpha -dTextAlphaBits=4 -dGraphicsAlphaBits=4 -r72x72 -dFirstPage=1 -dLastPage=1 -sOutputFile=out.pdf -f input.pdf

gs -q -dBATCH -dMaxBitmap=50000000 -dNOPAUSE -sDEVICE=ppmraw -dTextAlphaBits=4 -dGraphicsAlphaBits=4 -r72x72 -dFirstPage=1 -dLastPage=1 -sOutputFile=out.pdf -- input.pdf -c quit

time -l gs -sDEVICE=jpeg -o thumb.jpg -dJPEGQ=75 -dFirstPage=1 -dLastPage=1  -dPDFFitPage -dDEVICEWIDTHPOINTS=150 -dDEVICEHEIGHTPOINTS=84 wp.pdf

pdfinfo -box page_boxes.pdf


##############################################################
https://www.ghostscript.com/doc/current/Use.htm
https://www.ghostscript.com/doc/9.22/Use.htm
##############################################################

The geometry resource affects only window placement.
Resolution is expressed in pixels per inch (1 inch = 25.4mm).

-dPDFDEBUG			PDF Interpreter
-dPDFWRDEBUG		PDF Writer
-dSETPDDEBUG		setpagedevice

gs -o right2.pdf -sDEVICE=pdfwrite -dFIXEDMEDIA -dDOPDFMARKS -g10620x10620  -c "[ /CropBox [1072 1880 2136 2944] /PAGES pdfmark " -c "<</PageOffset [-1072 -235]>> setpagedevice" -r300x300 -dPDFDEBUG -f out.pdf

pdfinfo -box -f 1 -l 3 input_file.pdf

-gnumber1xnumber2
Equivalent to -dDEVICEWIDTH=number1 and -dDEVICEHEIGHT=number2, specifying the device width and height in pixels for the benefit of devices such as X11 windows and VESA displays that require (or allow) you to specify width and height. Note that this causes documents of other sizes to be clipped, not scaled: see -dFIXEDMEDIA below.

1 dpi = 1 Dot per Inche(25.4 mm)
1 inch equals 2.54 centimeters. = 25.4mm
1 point = 1⁄72 inches = 25.4⁄72 mm = 0.352¯7 mm [ ≙ 0.3528 mm]

720 pixels == 1 inch (at 720 dpi)
PostScript points 72 points == 1 inch with -dDEVICEWIDTHPOINTS=w -dDEVICEHEIGHTPOINTS=h.
9.36 inch ≈= 674 points and 12.67 inch ≈= 912 points.
300 cm is 118.11 inches, which at 150 dpi works out at a bitmap 17716.5, or rounded up to 17717 pixels.


identify -verbose some.pdf | grep "Print size"

units -t '118.11 inch' 'mm'
> 2999.994

##############################################################
#
#	units — unit conversion and calculation program
#
##############################################################

http://manpages.ubuntu.com/manpages/cosmic/man1/units.1.html
sudo apt install units -y

units -t '118.11 inch' 'mm'
> 2999.994

units -t '133 inch' 'mm'
> 3378.2

##############################################################
#
#	px to mm Converter
#	https://everythingfonts.com/font/tools/units/px-to-mm
#	https://www.pixelcalculator.com/
#
##############################################################

1129mm[150dpi] = 6667px
1129mm[300dpi] = 13335px

1 Zoll = 1 Inch = 25.4 mm
1 dpi = 1 Dot per Inche(25.4 mm)
1 ppi = 1 dpi = 1 Pixel per Inch(25.4 mm)



300 cm is 118.11 inches, which at 150 dpi works out at a bitmap up to 17717 pixels.
200 cm is 78.74 inches, at 150 dpi that works out to 11811 pixels.


units -t '112.9 cm' 'inch'
> 44.448819

https://www.koethen.de/verlagshersteller/rechner/umrechnung-cm-in-pixel.html
https://www.pixelcalculator.com/
https://www.blitzresults.com/de/pixel/
https://www.blitzrechner.de/pixel-zentimeter-umrechnen/
https://www.din-formate.de/pixelrechner-bildaufloesung-druckmasse-mm-cm-dpi-ppi-pixelkalkulator-fotogroesse-berechnen-fotos-bilder-poster-drucken.html

cm2px > 112.9cm * dpi 300 = 13335


----


##############################################################
#
#   pdf splitten, joinen, größe verändern unter linux mittels command line
#
##############################################################
https://dissidenz.noblogs.org/post/2016/07/21/pdf-splitten-joinen-grose-verandern-unter-linux-mittels-command-line/
https://stackoverflow.com/questions/20899192/how-to-split-single-pdf-page-in-half-vertically-using-ghostscript
https://stackoverflow.com/questions/40131804/how-to-limit-pdf-rasterization-size-when-using-imagemagick-ghostscript


nützliche programme: ghostscript, pdftk, pdfinfo u. pdfcrop

mit pdfcrop kann eins ganz gut schnittmarken entfernen.

pdfcrop --bbox "8.5 8.5 603.5 850.5" --clip input.pdf output.pdf
mit ghostscript ist es bisschen komplizierter, dafür geht aber auch mehr

sed 's#CropBox#CrapBox#g' original.pdf > no_cropbox.pdf
gs -sDEVICE=pdfwrite -o fixed.pdf -c "[/CropBox [8.6415 8.449 603.6415 850.449] /PAGES pdfmark" -f no_cropbox.pdf
mit pdftk gehen paar sachen einfach, wie seite drehen o. gerade/ungerade seiten zammischen. siehe: https://www.pdflabs.com/docs/pdftk-cli-examples/

pdftk A=even.pdf B=odd.pdf shuffle A B output collated.pdf
zum splitten mit ghostscript zuerst mit pdfinfo (oder anderem tool) größe rausfinden, dann folgendes befolgen: http://superuser.com/questions/235074/how-can-i-split-a-pdfs-pages-down-the-middle/235401#235401

gs -o left.pdf -sDEVICE=pdfwrite -g6038x8589 -c "<</PageOffset [0 0]>> setpagedevice" -f input.pdf
gs -o right.pdf -sDEVICE=pdfwrite -g6038x8589 -c "<</PageOffset [-604 0]>> setpagedevice" -f input.pdf
mit gs kann sich eins auch irgend die seiten zusammenstellen (wobei mit pdftk ist’s wahrscheinlich einfacher):

gs -o output.pdf -sDEVICE=pdfwrite -dNOPAUSE -dBATCH -dSAFER -dFirstPage=2 -dLastPage=16 -f input.pdf
pdftk in.pdf cat 1-12 14-end output out1.pdf
zum größe u. qualität verändern.

gs -o output.pdf -sDEVICE=pdfwrite -sPAPERSIZE=a4 -dFIXEDMEDIA -dPDFSETTINGS=/ebook -dPDFFitPage -dCompatibilityLevel=1.4 input.pdf
This was written by C wie Zebra. Posted on Thursday, July 21, 2016, at 04:07. Filed under Category. Bookmark the permalink. Follow comments here with the RSS feed. Both comments and trackbacks are currently closed.
‹ surveillance self-defence copyright bzw. urheberrecht ›





