
######################################
#
# Git Remote Drive Samba Connection
#
#####################################

#gvfsd-fuse on /run/user/1000/gvfs type fuse.gvfsd-fuse (rw,nosuid,nodev,relatime,user_id=1000,group_id=1000)
mount -t cifs -o username=root,password=xxxxx //192.168.0.186/asmedia-hdd /media/asmedia-hdd
sudo mount -t cifs -o user=data,password=data //nas/data /mnt/nas-data
/usr/share/gvfs/mounts/smb.mount
gvfs-mount smb://WORKGROUP\;root@192.168.0.186/asmedia-hdd
gvfs-mount -l
cd ~/.gvfs/smb-share\:domain\=WORKGROUP\,server\=192.168.0.186\,share\=asmedia-hdd\,user\=root/
watch -- du -h test.mkv

//192.168.0.186/asmedia-hdd  \
    /media/asmedia-hdd cifs rw,workgroup=WORKGROUP,username=root,password=xxxxx,noauto,users,iocharset=utf8 \
     0 0 \
     chmod 0755 /usr/sbin/mount.cifs

------------------------------------------------------

env | grep user
mount | grep gvfs | awk '{print $3}'
mount | grep gvfs
gksu nano /etc/samba/smb.conf
sudo service smbd restart
[Public]
path = /home/barb/Public
browseable = yes
guest ok = no
force group = plugdev
writeable = yes
create mask = 0664
force directory mode = 2775
sudo bindfs -o perms=0666:+X,group=plugdev /home/barb/Shared /home/barb/Shared

------------------------------------------------------

git clone /run/user/1000/gvfs/smb-share:server=192.168.1.122,share=git/Svr10 -b development Svr10 --recursive
pwd /run/user/1000/gvfs/smb-share:server=samba,share=samba/production/GNC
$ touch foo
$ gvfs-trash foo; echo $status

------------------------------------------------------

git init $HOME
git --git-dir $HOME/.git status

git --git-dir=/mycode/.git --work-tree=/mycode status
git --git-dir=/home/username/src/s3cmd/.git --work-tree=/home/username/src/s3cmd pull
git --git-dir="$HOME/foo/.git" --work-tree="$HOME/foo" status
git --git-dir=~/foo/.git --work-dir=~/foo status

git config core.autocrlf input
git rm --cached -r .
git reset --hard

------------------------------------------------------

https://git-scm.com/book/be/v2/Customizing-Git-Git-Configuration

If you’re on a Windows machine, set it to true – this converts LF endings into CRLF when you check out code:
$ git config --global core.autocrlf true

If you’re on a Linux or Mac system that uses LF line endings, then you don’t want Git to automatically convert them when you check out files; however, if a file with CRLF endings accidentally gets introduced, then you may want Git to fix it. You can tell Git to convert CRLF to LF on commit but not the other way around by setting core.autocrlf to input:
$ git config --global core.autocrlf input

This setup should leave you with CRLF endings in Windows checkouts, but LF endings on Mac and Linux systems and in the repository.
If you’re a Windows programmer doing a Windows-only project, then you can turn off this functionality, recording the carriage returns in the repository by setting the config value to false:
$ git config --global core.autocrlf false

sed -i 's/0770/0775/g' vendor/framework/DriverInterface.php
sed -i 's/0660/0664/g' vendor/framework/DriverInterface.php

find pub -type f -exec chmod 664 {} \;
find pub -type d -exec chmod 775 {} \;

------------------------------------------------------

smb://vemex:vemex-VirtualBox/
git@vemex-VirtualBox:root/px.git
smb://192.168.178.31
nautilus
sudo mount -t cifs //vemex-VirtualBox/
sudo nano /etc/fstab
sudo mount -t cifs //SomeMachine/SomeShare some_directory
sudo mount //192.168.0.100/Data ~/Data

-----------------------------------------------------------------------------------

/etc/samba/smb.conf and change your workgroup
name resolve order = bcast host lmhosts wins

sudo service smbd restart
sudo service nmbd restart

-----------------------------------------------------------------------------------

gvfs-mount smb://192.168.0.100/Data
gvfs-mount -u smb://192.168.0.100/Data # unmount
gvfs-ls smb://192.168.0.100
gvfs-tree smb://192.168.0.100

-----------------------------------------------------------------------------------

gksudo gedit /etc/hosts
192.168.120.65    blablaPcName

-----------------------------------------------------------------------------------

/etc/network/interfaces
# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto eth0
iface eth0 inet dhcp

# The host network interface
#auto eth1
#iface eth1 inet dhcp
auto eth1
iface eth1 inet static
   address 192.168.36.2
   netmask 255.255.255.0
   network 192.168.36.0
   gateway 192.168.36.1
   dns-nameservers 192.168.36.1

-----------------------------------------------------------------------------------

smb.conf
[share]
 comment = "Vbox server share"
 path = /
 writable = yes
 read only =no
 browseable = yes
 force directory mode = 777
 force create mode = 777
 force security mode = 777
force directory security mode = 777
 hide dot files = no
 create mask = 0777
 directory mask = 0777
 valid users = @users, tural, root
 delete readonly = yes
 guest ok = yes
workgroup = WORKGROUP

-----------------------------------------------------------------------------------


 switching to Bridged interface mode while disabling DHCP and assigning a static IP address
 for the Host-Only adapter is enough for the host machine to reach the guest.

https://docs.gitlab.com/ce/ssh/README.html
https://docs.gitlab.com/ce/ssh/README.html#generating-a-new-ssh-key-pair
http://stackoverflow.com/questions/11177809/how-to-ping-ubuntu-guest-on-virtualbox
http://askubuntu.com/questions/281466/samba-how-can-i-access-a-share-on-a-virtualbox-guest-in-nat-mode
http://askubuntu.com/questions/249678/how-to-access-samba-shares-in-lubuntu-12-10
https://ubuntuforums.org/showthread.php?t=1598928
http://askubuntu.com/questions/74789/failed-to-retrieve-share-list-from-server-error-when-browsing-a-share-with-nau
https://ubuntuforums.org/showthread.php?t=2164517

Process failed to start (/usr/bin/git ls-files --exclude-standard --others -z -- linux_howto/git_commandsP3.txt):



#############################################################################################

sudo mount -t cifs -o user=testuser,domain=testdomain //192.168.1.100/freigabe /mnt

sudo apt-get install sshfs
sudo mkdir /mnt/droplet <--replace "droplet" whatever you prefer
sudo sshfs -o allow_other,defer_permissions root@xxx.xxx.xxx.xxx:/ /mnt/droplet
sudo sshfs -o allow_other,defer_permissions,IdentityFile=~/.ssh/id_rsa root@xxx.xxx.xxx.xxx:/ /mnt/droplet
sudo umount /mnt/droplet

sudo nano /etc/fstab
sshfs#root@xxx.xxx.xxx.xxx:/ /mnt/droplet

# https://www.digitalocean.com/community/tutorials/how-to-use-sshfs-to-mount-remote-file-systems-over-ssh


######################################################
#
#	MOUNT SAMBA SHARE USING GVFS-MOUNT AS NORMAL USER
#	Mounting a mountpoint share using the username user and password
#
# 	https://pario.no/2015/06/24/mount-samba-share-using-gvfs-mount-as-normal-user/
#	https://wiki.ubuntuusers.de/gvfs-mount/
#
######################################################

# smb-share\:domain\=WORKGROUP\,server\=192.168.0.111\,share\=asmedia-hdd\,user\=root/

gvfs-mount -l
gvfs-mount -h

[user@host] gvfs-mount smb://username@192.168.0.200/shared-folder

If the command finishes without any errors you can now access your smb mount on the following path
[user@host] ls -l /run/user/1000/gvfs/smb-share\:server\=192.168.0.200\,share\=shared-folder\,user\=username/

1000 corresponds to your users id and can be determined by the id command
[user@host] id

uid=1000(username) gid=1000(username) groups=1000(username)

# /run/user/1000/gvfs/smb-share:server=somedomain.com,share=username/git/some-project/

gvfs-mount smb://10.10.2.4./music

#sudo gedit /etc/hostname
#sudo gedit /etc/hosts
#sudo gedit /etc/samba/smb.conf
sudo service smbd restart
sudo service nmbd restart

# https://wiki.samba.org/index.php/Mounting_samba_shares_from_a_unix_client

sudo apt install samba-common-bin
testparm -v | grep admin

ldap admin dn =
administrative share = No
admin users =


/usr/share/doc/nautilus-share/examples/smb.conf

sudo /etc/init.d/samba restart
sudo /etc/init.d/smbd restart
sudo initctl restart smbd

http://www.linuxtopia.org/online_books/network_administration_guides/samba_reference_guide/24_locking_08.html


