#########################################################
#
#	xfce4 power manager
#
#########################################################

xfce4-power-manager
sudo apt install xfce4-power-manager
xfce4-power-manager --dump
for interface in /sys/class/backlight/*; do echo -e "\n $interface"; cat $interface/{brightness,max_brightness,actual_brightness}; done
lspci -vnn

sudo apt install xbacklight
xbacklight -set 50

ls /sys/class/backlight/
intel_backlight

https://itsfoss.com/fix-brightness-ubuntu-1310/

sudo gedit /usr/share/X11/xorg.conf.d/20-intel.conf
Add the following lines to this file:

Section "Device"
        Identifier  "card0"
        Driver      "intel"
        Option      "Backlight"  "intel_backlight"
        BusID       "PCI:0:2:0"
EndSection




#############################################################
#
#   UNIX Change date modified created file
#   change the date modified/created of a file
#
#   https://www.computerhope.com/unix/utouch.htm
#   http://www.linfo.org/touch.html
#   https://www.mkssoftware.com/docs/man1/touch.1.asp
#   https://askubuntu.com/questions/62492/how-can-i-change-the-date-modified-created-of-a-file
#
#############################################################

touch -a -m -t "10310000" filename.txt
touch -d "October 31"  filename.txt
touch -t "10310000" filename.txt
touch --date="1 February" filename.txt
touch -md "Sep 1 1927 23:58:59" file1.txt
touch -at 2000.59 file1.txt
touch -ad "July 12 1895" file.txt
touch -mt 198307010000 file.txt

for i in *.txt; do touch -md "Dec 1 2018 23:58:59"  "$i"; done

touch -d "2 hours ago" filename
touch -d "$(date -R -r filename) - 2 hours" filename
find DIRECTORY -exec touch -d "2 hours ago" {} +
for i in *; do touch -r "$i" -d '+8 hour' "$i"; done

touch -a -m -t 201512180130.09 fileName.ext

/*
-a = accessed
-m = modified
-t = timestamp - use [[CC]YY]MMDDhhmm[.ss] time format
*/


#############################################################
#
#   systemctl
#
#############################################################


https://wiki.ubuntuusers.de/systemd/systemctl/
https://www.certdepot.net/rhel7-boot-reboot-shut-system-normally/
https://www.thegeekdiary.com/centos-rhel-7-shutting-down-suspending-or-rebooting-commands-systemctl/
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/sect-managing_services_with_systemd-power
https://www.digitalocean.com/community/tutorials/how-to-use-systemctl-to-manage-systemd-services-and-units

https://en.wikipedia.org/wiki/Sysctl
https://wiki.archlinux.org/index.php/sysctl
https://wiki.securepoint.de/System_cli_v11
http://www.linux-praxis.de/lpic2/lpi201/manpages/sysctl.html
https://wiki.archlinux.org/index.php/allow_users_to_shutdown
https://help.ubuntu.com/lts/installation-guide/i386/ch08s01.html
https://www.freedesktop.org/software/systemd/man/systemctl.html


# systemctl daemon-reload
# systemctl reboot
# systemctl poweroff
# shutdown -fr now

# reboot the system
# -------------------------------------
# reboot
# systemctl reboot
# shutdown -r now
# init 6
# telinit 6

# shutdown the system
# -------------------------------------
# halt
# systemctl halt
# shutdown -h now
# init 0
# telinit 0

# start stop a currently running service
# -------------------------------------
sudo systemctl start application
sudo systemctl stop application.service
sudo systemctl restart application.service
sudo systemctl reload application.service


#######################################################
#
#	Switching from zsh to bash, and back again?
#
#######################################################

exec bash # Switch to bash
exec zsh # Switch to zsh


##############################################################
#
#   cat command
#   http://lpicentral.blogspot.com/2018/12/cat-command-in-linux-with-examples.html
#
##############################################################

cat filename 			# show file content
cat file1 file2 		# contents of Files
cat -n filename 		# view contents of a file preceding with line numbers
cat > newfile 			# Create a file
cat file > new file 	# Copy the contents of one file to another file.
cat -s geeks.txt 		# suppress repeated empty lines in output
cat file1 >> file2 		# append the contents of one file
tac filename 			# display content in reverse
cat -E "filename"		# highlight the end of line.


################################################
#
#   Xfce Volume Control Fix
#
################################################


Xfce Volume adjusting sound applet
https://ubuntuforums.org/showthread.php?t=2210233

sudo apt-get install volumeicon-alsa
killall xfce4-volumed
volumeicon&
xterm -e 'alsamixer'
xfce4-terminal -e 'alsamixer'



######################################

How to install NVIDIA.run?
https://askubuntu.com/questions/149206/how-to-install-nvidia-run?fbclid=IwAR2SntvmIWt4LYchJMeNFkZpxv4Crl0RJiXst4rQElfuhVEM9jgUtSmSFOw

######################################

Log out and Hit Ctrl+Alt+F1
sudo service lightdm stop or sudo lightdm stop
sudo init 3
chmod +x ./your-nvidia-file.run
sudo ./your-nvidia-file.run --no-x-check
sudo service lightdm start or sudo start lightdm

or

sudo add-apt-repository ppa:ubuntu-x-swat/x-updates
sudo add-apt-repository ppa:graphics-drivers
apt-get remove nvidia*
sudo apt-get update
sudo apt-get install nvidia-390
sudo apt-get dist-upgrade

sudo systemctl daemon-reload
sudo systemctl enable nvidia-persistenced
sudo systemctl start nvidia-persistenced


http://ubuntuhandbook.org/index.php/2017/10/install-media-codecs-ubuntu-17-10/
How to install the MPEG-4 AAC decoder and the H.264 ...
apt-get install ubuntu-restricted-extras.

Encoding high quality h265/HEVC 10-bit video via GPU:
http://www.linux-magazin.de/ausgaben/2017/11/ffmpeg-mit-gpus/
http://ntown.at/de/knowledgebase/cuda-gpu-accelerated-h264-h265-hevc-video-encoding-with-ffmpeg/


ffmpeg -hwaccel cuvid -i jQU_wiBW6M0.mp4  -crf 24 -threads 4 -preset ultrafast  -y outmovie3.mp4   # 2m24.058s
ffmpeg  -i jQU_wiBW6M0.mp4 -hide_banner   -crf 24 -threads 4 -preset ultrafast -y outmovie2.mp4    # 2m8.413s


Hardware acceleration methods:
ffmpeg -hwaccels
vdpau
vaapi
cuvid



https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html
https://www.microway.com/hpc-tech-tips/nvidia-smi_control-your-gpus/
https://docs.microsoft.com/en-us/azure/virtual-machines/linux/n-series-driver-setup

lspci | grep -i nvidia

Install CUDA for Ubuntu

sudo apt-get update
sudo apt-get upgrade -y
sudo apt-get dist-upgrade -y
#sudo apt install cuda
#sudo apt install cuda-drivers
sudo apt install nvidia-cuda*
sudo reboot

# verify cuda
nvcc --version

nvidia-smi
nvidia-smi -q | grep Temp
nvidia-smi -L
nvidia-smi --query-gpu=index,name,uuid,serial --format=csv
nvidia-smi dmon
nvidia-smi pmon
nvidia-smi -q -d SUPPORTED_CLOCKS
nvidia-smi -q -d CLOCK
nvidia-smi -q -d PERFORMANCE
nvidia-smi topo --matrix
nvidia-smi nvlink --status
nvidia-smi nvlink --capabilities
nvidia-smi -i 0 -q
nvidia-smi -i 0 -q -d MEMORY,UTILIZATION,POWER,CLOCK,COMPUTE

######################################
#
#   Set Alarm clock in Ubuntu :D
#
######################################

sudo apt install alarm-clock-applet
alarm-clock-applet

######################################
#
#   Gnome Shell - Lock Screen not working
#
######################################

sudo apt install gnome-screensaver
# gnome-screensaver-command -a
gnome-screensaver-command -l



OpenVPN  NordVPN
https://nordvpn.com/de/
https://nordvpn.com/de/tutorials/linux/openvpn/

sudo apt-get install openvpn
cd /etc/openvpn
sudo wget https://downloads.nordcdn.com/configs/archives/servers/ovpn.zip
sudo apt-get install ca-certificates
sudo apt-get install unzip
sudo unzip ovpn.zip
sudo rm ovpn.zip
cd /etc/openvpn/ovpn_udp/
# cd /etc/openvpn/ovpn_tcp/
ls -al
# sudo openvpn [file name]
sudo openvpn us842.nordvpn.com.udp.ovpn
sudo openvpn /etc/openvpn/ovpn_udp/us842.nordvpn.com.udp.ovpn

# GUI
sudo apt-get install network-manager-openvpn-gnome
sudo add-apt-repository universe
sudo apt-get update
sudo service network-manager restart

# speed
https://thebestvpn.com/fastest-vpns/
https://www.expressvpn.com/de/what-is-vpn/vpn-speed-test



######################################
#
#   How to find the frequency and type of my current RAM?
#   https://askubuntu.com/questions/391173/how-to-find-the-frequency-and-type-of-my-current-ram
#   https://www.binarytides.com/linux-lshw-command/
#
######################################

sudo lshw -short -C memory
sudo lshw -C memory
sudo lshw -short
sudo lshw -short -class memory
sudo lshw -class processor
sudo lshw -short -class disk
sudo lshw -class network
sudo lshw -businfo


######################################
#
#   Fix Broken Ubuntu OS
#   https://www.ostechnix.com/how-to-fix-broken-ubuntu-os-without-reinstalling-it/?
#
######################################

sudo rm /var/lib/apt/lists/lock
sudo rm /var/lib/dpkg/lock
sudo rm /var/lib/dpkg/lock-frontend
sudo dpkg --configure -a
sudo apt clean
sudo apt update --fix-missing
sudo apt install -f
sudo dpkg --configure -a
sudo apt upgrade
sudo apt dist-upgrade
sudo reboot



############################################################################
#
#	Convert PNG into JPG with REPLACE extension
#	https://superuser.com/questions/71028/batch-converting-png-to-jpg-in-linux
#
############################################################################

find -name '*.jpg' -print0 | xargs -0 -r mogrify -format png 	# mogrify

for i in *.png ; do convert "$i" "${i%.*}.jpg" ; done			# bash for loop
ls -1 *.png | xargs -n 1 bash -c 'convert "$0" "${0%.*}.jpg"'	# avoid loops in bash
ls -1 *.png | parallel convert '{}' '{.}.jpg'    				# GNU Parallel to run multiple jobs at once
ls -1 *.png | parallel -j 3 convert '{}' '{.}.jpg'				# CPU usage using 3 jobs on my dual-core system
ls -1 *.png | parallel --eta convert '{}' '{.}.jpg'				# ETA, jobs completed, average time per job
parallel convert '{}' '{.}.jpg' ::: *.png						# alternative syntax if you are using GNU Parallel.
parallel convert '{}' '{.}.jpg' -- *.png						# alternative syntax if you are using GNU Parallel.

for img in *.png; do filename=${img%.*} convert "$filename.png" "$filename.jpg"; done


for file in *.png; do echo "${file/.png/.jpg/}"; done
for file in *.png; do convert $file  -density 300x300  ${file/.png/.jpg}; done
for file in  111 222 333;do convert -density 300x300  $file.jpg  $file.png; done && ls *.png



############################################################################
#
#   flock
#
############################################################################


https://linux.die.net/man/1/flock
https://www.unix.com/shell-programming-and-scripting/268619-use-flock-command-whole-script.html
https://superuser.com/questions/1270757/gnu-linux-flock-command-how-to-atomically-take-several-locks

Options
-s, --shared
Obtain a shared lock, sometimes called a read lock.
-x, -e, --exclusive
Obtain an exclusive lock, sometimes called a write lock. This is the default.
-u, --unlock
Drop a lock. This is usually not required, since a lock is automatically dropped when the file is closed. However, it may be required in special cases, for example if the enclosed command group may have forked a background process which should not be holding the lock.
-n, --nb, --nonblock
Fail (with an exit code of 1) rather than wait if the lock cannot be immediately acquired.
-w, --wait, --timeout seconds
Fail (with an exit code of 1) if the lock cannot be acquired within seconds seconds. Decimal fractional values are allowed.
-o, --close
Close the file descriptor on which the lock is held before executing command. This is useful if command spawns a child process which should not be hold ing the lock.
-c, --command command
Pass a single command to the shell with -c.
-h, --help
Print a help message.


while ! flock -n -x file <command> ; do sleep $(($RANDOM%5)) ; done

while true
do  flock -x a flock -nE 101 -s b flock -nE 102 c <command>
    case $? in
    101) flock -s b;;
    102) flock -s c;;
    *)   break;;
done
flock -s b flock -nE 102 flock -nE 100 -x a c <command>


http://php.net/manual/en/function.flock.php

$fp = fopen("/tmp/lock.txt", "r+");

if (flock($fp, LOCK_EX)) {  // acquire an exclusive lock
    ftruncate($fp, 0);      // truncate file
    fwrite($fp, "Write something here\n");
    fflush($fp);            // flush output before releasing the lock
    flock($fp, LOCK_UN);    // release the lock
} else {
    echo "Couldn't get the lock!";
}

fclose($fp);

https://linux.die.net/man/2/flock
https://linux.die.net/man/1/flock
http://manpages.ubuntu.com/manpages/trusty/en/man1/flock.1.html
http://manpages.ubuntu.com/manpages/bionic/de/man1/flock.1.html