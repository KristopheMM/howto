###################################################################
#
#   systemd: nfs-common and rpcbind unit files to fix systemd NFS issues properly
#   https://linux.die.net/man/8/rpcbind
#   https://github.com/geerlingguy/raspberry-pi-dramble/issues/65
#
###################################################################

sudo apt-get purge rpcbind
sudo apt-get install nfs-kernel-server

systemctl start rpcbind
systemctl status rpcbind

systemctl status nfs-kernel-server
systemctl start rpcbind
systemctl is-enabled rpcbind
systemctl status rpcbind

systemctl enable rpcbind.service
systemctl enable nfs-common
systemctl disable rpcbind sudo systemctl enable rpcbind
systemctl add-wants multi-user.target rpcbind.service
systemctl start rpcbind.service

/sbin/rpcbind -f -w


######################################################
#
#	How to concatenate multiple lines of output to one line?
#
######################################################

https://stackoverflow.com/questions/15580144/how-to-concatenate-multiple-lines-of-output-to-one-line
https://superuser.com/questions/1008409/keep-grep-output-on-one-line
https://www.cyberciti.biz/faq/searching-multiple-words-string-using-grep/

grep pattern file | awk '{print}' ORS='" '
grep pattern file | tr '\n' ' '
grep pattern file | xargs
grep -oP "x\K(\S\S)") | tr -d '\n'

echo "a b a" | grep -o a | tr "\n" "\t"; echo

cat file | grep pattern | paste -sd' '
cat file | grep pattern | paste -sd'~' | sed -e 's/~/" "/g'
awk ' /pattern/ {print}' ORS=' ' /path/to/file

######################################################
#
#	Echo newline in Bash prints literal \n
#
######################################################

https://stackoverflow.com/questions/8467424/echo-newline-in-bash-prints-literal-n

printf "hello\nworld\n"
echo -e "Hello\nworld"
echo -e 'Hello\nworld'
echo Hello$'\n'world
echo $'hello\nworld'

######################################################
#
#	bash get list of multiple patterns from txt files
#
#	1. list files
#	2. for each file info from 3 patterns into the same output line
#	3. print new line at the end
#	3. replace unwanted info with regex
#
######################################################

# test output
for i in dir_prefix*/file.txt; do echo $i; done

# get list
for i in dir_prefix*/file.txt; do grep -e pattern1 -e pattern2 -e pattern3 -m3 $i | tr '\n' ' ' && printf %"s\n"; done

remove with sublime-txet regex
pattern1.*(\d)"\s