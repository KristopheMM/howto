GitHub - Delete commits history with git commands

First Method

Deleting the .git folder may cause problems in our git repository. If we want to delete all of our commits history, but keep the code in its current state, try this:

# Check out to a temporary branch:
git checkout --orphan TEMP_BRANCH

# Add all the files:
git add -A

# Commit the changes:
git commit -am "Initial commit"

# Delete the old branch:
git branch -d <branchName> # if was merged
git branch -D <branchName> # if wasn't merged!

# Rename the temporary branch to master:
git branch -m master

# Finally, force update to our repository:
git push -f origin master
This will not keep our old commits history around. But if this doesn't work, try the next method below.

Second Method

# Clone the project, e.g. `myproject` is my project repository:
git clone https://github/heiswayi/myproject.git

# Since all of the commits history are in the `.git` folder, we have to remove it:
cd myproject

# And delete the `.git` folder:
git rm -rf .git

# Now, re-initialize the repository:
git init
git remote add origin https://github.com/heiswayi/myproject.git
git remote -v

# Add all the files and commit the changes:
git add --all
git commit -am "Initial commit"

# Force push update to the master branch of our project repository:
git push -f origin master
NOTE: You might need to provide the credentials for your GitHub account.

------------

https://gist.github.com/heiswayi/350e2afda8cece810c0f6116dadbe651
https://help.github.com/articles/removing-sensitive-data-from-a-repository/
https://hellocoding.wordpress.com/2015/01/19/delete-all-commit-history-github/

How to delete the commit history in github # OK

git clone https://github.com/acsudeep/myproject.git
cd myproject
sudo rm -rf .git

git init

$ git remote add origin https://github.com/acsudeep/myproject.git
# add remote url
$ git remote -v
# verify

git add --all
$ git commit -am 'initial commit'

git push -f origin master

--------------

https://tecadmin.net/delete-commit-history-in-github/

git checkout --orphan temp_branch # Create Orphan Branch
#Add Files to Branch
git add -A
$ git commit -am "the first commit"
git branch -D master # Delete master Branch
git branch -m master #Rename Current Branch
git push -f origin master # Push Changes

###################################################
#
#	Git Delete
#
###################################################

https://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-both-locally-and-remotely
https://makandracards.com/makandra/621-git-delete-a-branch-local-or-remote

git push origin --delete mybranch # remote
git branch --delete mybranch # local

git push -d <remote_name> <branch_name>
git branch -d <branch_name>
git branch -d branch_name
git branch -D branch_name # -D, which is an alias for --delete --force



##########################################################
#
#	Git add ignore
#   https://stackoverflow.com/questions/4308610/how-to-ignore-certain-files-in-git
#
##########################################################

git rm --cached filename
git rm --cached name_of_file

git update-index --assume-unchanged <file> # ignore changed files (temporarily)
git update-index --no-assume-unchanged <file> # revert


##########################################################
#
#   List branches
#
##########################################################

git branch -a - All branches.
git branch -r - Remote branches only.
git branch -l or git branch - Local branches only.
git branch -a | grep -v 'remotes'