
##########################################
#
#	DATAMATRIX (ISO/IEC 16022:2006)
#
###########################################

FNC1 which must be encoded in the symbol, when used as a start or separator character, but never appears in the Human Readable Interpretation.
Ex: Encoded String: FNC101095011010209171719050810ABCD1234 FNC12110

LSB = Least significant bit
MSB = Most significant bit

GS1 DataMatrix (Data Matrix ECC 200)
TCPDF DATAMATRIX (ISO/IEC 16022:2006)

References:
https://www.gs1.org/docs/barcodes/GS1_DataMatrix_Guideline.pdf

https://www.activebarcode.de/codes/datamatrix.html
https://www.activebarcode.de/codes/datamatrix_examples.html
https://www.activebarcode.com/codes/gs1-datamatrix.html

https://tcpdf.org/examples/example_050/

Maschinenlesbare Freimachungsvermerke DV-Freimachung
https://www.deutschepost.de/content/dam/dpag/images/D_d/DV-Freimachung/dp_datamatrixcode-dv-freimachung_1.4.0.pdf

http://www.wilhelm-sieloff-live.de/04Portocard/Inhalt/PCI/Inhalt2-PCI-P-DHL.htm
http://briefmarkenklappkarten.weebly.com/3-deutsche-postdhl.html

References:
https://www.gs1.org/docs/barcodes/GS1_DataMatrix_Guideline.pdf

https://www.activebarcode.de/codes/datamatrix.html
https://www.activebarcode.de/codes/datamatrix_examples.html
https://www.activebarcode.com/codes/gs1-datamatrix.html

https://tcpdf.org/examples/example_050/

Maschinenlesbare Freimachungsvermerke DV-Freimachung
https://www.deutschepost.de/content/dam/dpag/images/D_d/DV-Freimachung/dp_datamatrixcode-dv-freimachung_1.4.0.pdf

https://www.deutschepost.de/de/e/einlieferungslisten.html
https://www.deutschepost.de/de/d/dialogpost/dialogpost_downloads.html
https://www.dhl.de/de/privatkunden/pakete-versenden/deutschlandweit-versenden/paeckchen.html

http://www.wilhelm-sieloff-live.de/04Portocard/Inhalt/PCI/Inhalt2-PCI-P-DHL.htm
http://briefmarkenklappkarten.weebly.com/3-deutsche-postdhl.html

http://zxing.appspot.com/generator
https://zxing.org/w/decode.jspx
https://zxing.org/w/decode
http://boy.co.ua/decode.php
https://online-barcode-reader.inliteresearch.com/ # decoder ok

http://libdmtx.sourceforge.net/resources.php
http://www.java4less.com/RDataMatrix-php/guide.shtml#ow
https://github.com/mkoppanen/php-zbarcode
http://zbar.sourceforge.net/about.html
http://phpqrcode.sourceforge.net/examples/index.php?example=100
https://www.revolvy.com/topic/Data%20Matrix&item_type=topic
http://www.findbestopensource.com/product/pyqrnative

https://stackoverflow.com/questions/33093751/add-a-fnc1-character-to-code-created-with-tcpdf-datamatrix

https://github.com/stephen-hill/base58php/blob/master/src/GMPService.php


// * Decode base58 into a PHP string.

 	$indexes = array_flip(str_split($this->alphabet));
        $chars = str_split($base58);
        // Check for invalid characters in the supplied base58 string
        foreach ($chars as $char) {
            if (isset($indexes[$char]) === false) {
                throw new InvalidArgumentException('Argument $base58 contains invalid characters.');
            }
        }
        // Convert from base58 to base10
        $decimal = gmp_init($indexes[$chars[0]], 10);
        for ($i = 1, $l = count($chars); $i < $l; $i++) {
            $decimal = gmp_mul($decimal, $this->base);
            $decimal = gmp_add($decimal, $indexes[$chars[$i]]);
        }
        // Convert from base10 to base256 (8-bit byte array)
        $output = '';
        while (gmp_cmp($decimal, 0) > 0) {
            list($decimal, $byte) = gmp_div_qr($decimal, 256);
            $output = pack('C', gmp_intval($byte)) . $output;
        }
        // Now we need to add leading zeros
        foreach ($chars as $char) {
            if ($indexes[$char] === 0) {
                $output = "\x00" . $output;
                continue;
            }
            break;
        }


//  * Encode a string into base58.

 	// Now we need to convert the byte array into an arbitrary-precision decimal
        // We basically do this by performing a base256 to base10 conversion
        $hex = unpack('H*', $string);
        $hex = reset($hex);
        $decimal = gmp_init($hex, 16);
        // This loop now performs base 10 to base 58 conversion
        // The remainder or modulo on each loop becomes a base 58 character
        $output = '';
        while (gmp_cmp($decimal, $this->base) >= 0) {
            list($decimal, $mod) = gmp_div_qr($decimal, $this->base);
            $output .= $this->alphabet[gmp_intval($mod)];
        }
        // If there's still a remainder, append it
        if (gmp_cmp($decimal, 0) > 0) {
            $output .= $this->alphabet[gmp_intval($decimal)];
        }
        // Now we need to reverse the encoded data
        $output = strrev($output);
        // Now we need to add leading zeros
        $bytes = str_split($string);
        foreach ($bytes as $byte) {
            if ($byte === "\x00") {
                $output = $this->alphabet[0] . $output;
                continue;
            }
            break;
        }


---------------

You have to use \x0000 and select "Decode Null" at the Barcode-Parameters.
This generates zero bytes (00) in the datamatrix.

http://streamshare.streamserve.com/Forum/Topic/?topicID=5350



// https://rosettacode.org/wiki/Non-decimal_radices/Output#PHP
<?php
foreach (range(0, 33) as $n) {
  echo decbin($n), "\t", decoct($n), "\t", $n, "\t", dechex($n), "\n";
}
?>

<?php
foreach (range(0, 33) as $n) {
  printf(" %6b %3o %2d %2X\n", $n, $n, $n, $n);
}
?>

------

<?php
function to_base256($number, $from_base = 10) {
    $binary_number = base_convert($number, $from_base, 2);
    $final_string = "";
    $new_length = (ceil(strlen($binary_number)/8)*8);
    $binary_number = str_pad($binary_number, $new_length, "0", STR_PAD_LEFT);
    for($i=($new_length-8); $i>=0; $i-=8) {
        $final_string = chr(base_convert(substr($binary_number, $i, 8), 2, 10)).$final_string;
    }
    return $final_string;
}

function from_base256($string, $to_base = 10) {
    $number = "";
    for($i=0; $i<strlen($string); $i++) {
        $number .= str_pad(base_convert(ord($string{$i}), 10, 2), 8, "0", STR_PAD_LEFT);
    }
    return base_convert($number, 2, $to_base);
}
?>

http://php.net/manual/de/function.base-convert.php
https://etherhack.co.uk/ascii/baseconvert/baseconvert.html

---



https://gist.github.com/5263/1208694


frankierart={
	0x01:'Stampit 2003',
	0x02:'0x02???',
	0x03:'Frankit',
	0x05:'Filiale',
	0x07:'Frankierservice Infopost/Infobrief',
	0x08:'Premiumadress',
	0x09:'Pressepost Randbeschriftung 52x52 Module, Version 1',
	0x0c:'Frankit PremA???',
	0x12:'DV-Freimachung',
	0x18:'Elektroreturn',
	0x19:'Pressepost Etikett, Version1',
	0x1a:'Pressepost Randbeschriftung 16x28 Module, Version 1',
	0x1c:'Premiumadress Label',
	0x30:'Plusbrief',
	0x33:'Stampit',
	0x30:'Plusbrief individuell',
	0x42:'Plusbrief/Marke individuell',
	0x4d:'Handyporto?',
	0x52:'Elektroreturn',
	0x66:'Handyporto?',
	#0x33:'Marke individuell',
	0x85:'Internetmarke'

}
productid={
	1:'Standardbrief',
	2:'Standardbrief Einschreiben Einwurf',
	7:'Standardbrief Einschreiben',
	8:u'Standardbrief Einschreiben + R\xfcckschein',
	9:u'Standardbrief Einschreiben + Eigenh\xe4ndig',
	10:u'Standardbrief Einschreiben + Eigenh\xe4ndig + R\xfcckschein',
	11:'Kompaktbrief',
	21:u'Gro\xdfbrief',
	32:'Maxibrief',
	51:'Postkarte',
	76:u'B\xfcchersendung Standard',
	77:u'B\xfcchersendung Kompakt',
	78:u'B\xfcchersendung Gro\xdf',
	79:u'B\xfcchersendung Maxi',
	80:u'Warensendung Standard',
	81:u'Warensendung Kompatk',
	82:u'Warensendung Maxi',
	83:u'Warensendung Standard',
	80:u'Warensendung Standard',

	86:'Infobrief/Katalog Standard',
	87:'Infobrief/Katalog Kompakt',
	88:u'Infobrief/Katalog Gro\xdf',
	89:'Infobrief/Katalog Maxi',
	90:'Infopost/Katalog',
	450:'Pressesendung E+0',
	451:'Pressesendung E+1',
	452:'Pressesendung E+2',
	453:'Postvertriebsstk. E+0',
	454:'Postvertriebsstk. E+1',
	455:'Postvertriebsstk. E+2',
	3106:'Infopost/Katalog Kompakt',
	3101:'Infopost/Katalog Kompakt >20g',
	3107:u'Infopost/Katalog Gro\xdf',
	3108:u'Infopost/Katalog Maxi',
	3104:u'Infopost/Katalog Maxi >20g',
	3105:u'Infopost/Katalog Maxi >100g',
	9001:'Standardbrief PremA',
	9279:'Pressesendung E+0 PremA',
	9280:'Pressesendung E+1 PremA',
	9287:'Pressesendung E+2 PremA'
}
frankmaschmanuf={
	0x1d:'Neopost',
	0x2d:'Frama',
	0x3d:'Francotyp-Postalia',
	0x4d:'Pitney Bowes',
	0x6d:'Telefrank'}
# Write a Data Matrix barcode
#dm_write = DataMatrix()
#dm_write.encode("Hello, world!")
#dm_write.save("hello.png", "png")



https://www.deutschepost.de/content/dam/dpag/images/P_p/Premiumadress/mlfvm_8_premiumadress_1_1.pdf
https://www.deutschepost.de/content/dam/dpag/images/D_d/dialogpostmanager/anleitung_premiumadress_datamatrix.pdf
https://de.wikipedia.org/wiki/DataMatrix-Code

http://www.binaryhexconverter.com/hex-to-decimal-converter
http://www.binaryhexconverter.com/decimal-to-hex-converter
https://www.wolframalpha.com/input/?i=4445411224013353FD2100910046001557FC2D0A000A
https://www.dlsoft.com/dlHelps/barcodes/index.html#!postmatrix.htm
https://www.dlsoft.com/dlHelps/barcodes/index.html#!encodingmodes.htm
http://www.swingnote.com/tools/texttohex.php


Encoding mode	DataMatrix type
0		Auto Square
1		Auto Rectangular
2		ASCII Square
3		ASCII Rectangular
4		C40 Square
5		C40 Rectangular
6		Text Square
7		Text Rectangular
8		X12 Square
9		X12 Rectangular
10		EDIFACT Square
11		EDIFACT Rectangular
12		Base 256 Square
13		Base 256 Rectangular



https://github.com/dpifke/pifkoin/blob/master/python/blockchain.py
https://superuser.com/questions/1188931/is-dotted-decimal-notation-in-base-256-or-10
https://community.secondlife.com/forums/topic/49700-base-256-compression/
https://www.php.de/forum/webentwicklung/php-fortgeschrittene/99108-base-256-codierung-auf-zahlen-unter-256-anwenden
https://stackoverflow.com/questions/13465098/decimal-to-hexadecimal-converter-in-java
http://www.stethos.com/images/data/Barcode_Uebersicht_DE.pdf

http://www.bctester.de/de/home.html
http://www.bctester.de/fileadmin/ContentFiles/de/download/bctester_de.zip
http://www.bctester.de/fileadmin/_processed_/csm_screenshot_de_26154ce8f6.gif
https://www.tec-it.com/en/support/knowbase/symbologies/datamatrix/Default.aspx
https://www.combit.net/reporting/barcodes/

http://briefmarkenklappkarten.weebly.com/1-deutsche-post.html
http://www.wilhelm-sieloff-live.de/04Portocard/Inhalt/PCI/Inhalt2-PCI-P-Post.htm
https://www.code-knacker.de/datamatrixcode.htm
http://datamatrix.kaywa.com/#generator
http://www.philaseiten.de/cgi-bin/index.pl?ST=4187&da=1&F=280
http://philaseiten.wavecdn.net/up/781551/3/3/5c15e9c0_h.jpeg
http://philaseiten.wavecdn.net/up/781551/3/3/5c15e9c0_h.jpeg

Example


34 62 38 54 34 5a 47 47 20 20 20 20 20 20 20 20 entspricht dem HEX code für
4 b 8 T 4 Z G G

Post-Unternehmen: DEA (=Deutsche Post AG)
Frankierart: 08
Version Produkte/Preise: 26
Kundennummer: 5023063220
Frankierwert: 0,25 Euro
Einlieferungsdatum: 05.04.2012
Produktschlüssel: 9191
laufende Sendungsnummer: 00006070
EDS-Nummer: 478028584
PREMIUMADRESS-ID: 001
Kundenindividuelle Informationen: 34 62 38 54 34 5a 47 47 20 20 20 20 20 20 20 20


Ergebnis: DEA###-#À###'ä#ç##Ø#ç¨[###19747377
> Post-Unternehmen: DEA
> Frankierart: 08 (HEX:08)
> Version Produkte/Preise: 26 (HEX:1a)
> Kundennummer: 5059952640
> Frankierwert: 0,25 Euro
> Einlieferungsdatum: 11.04.2012
> Produktschlüssel: 9191
> laufende Sendungsnummer: 00034264
> EDS-Nummer: 484943963 (HEX: 1c ffffffe7 ffffffa8 5b)
> Ankündigung Inhalt Datenelement HEX: 01
> PREMIUMADRESS-ID: 002
> Kundenindividuelle Informationen: 31 39 37 34 37 33 37 37 20 20 20 20 20 20 20 20


Dekodiert in
> Ergebnis: DEA###-ª###H'#$.##ñ#¥<####1641-5947-84
> Post-Unternehmen: DEA
> Frankierart: 08 (HEX:08)
> Version Produkte/Preise: 26 (HEX:1a)
> Kundennummer: 5061120277
> Frankierwert: 0,72 Euro
> Einlieferungsdatum: 10.04.2012
> Produktschlüssel: 9262
> laufende Sendungsnummer: 00135921
> EDS-Nummer: 463813766 (HEX: 1b ffffffa5 3c ffffff86)
> Ankündigung Inhalt Datenelement HEX: 01
> PREMIUMADRESS-ID: 003
> Kundenindividuelle Informationen: 31 36 34 31 2d 35 39 34 37 2d 38 34 20 20 20 20

Kundennummer 5061120277 (MEN+ Happy-Size-Company, Frankfurt).


Post-Unternehmen: DEA
Frankierart: 18 (HEX:12)
Version Produkte/Preise: 26 (HEX:1a)
Kundennummer: 5045442349
Frankierwert: 0,69 Euro
Einlieferungsdatum: 21.03.2012
Produktschlüssel: 9262
laufende Sendungsnummer: 00087086
Teilnahmenummer: 57
Entgeltabrechnungsnummer: 133
Ankündigung Inhalt Datenelement HEX: 01
PREMIUMADRESS-ID: 002
Kundenindividuelle Informationen: 37 30 32 38 38 34 31 30 38 33 44 30 30 31 30 31 00


Absender Firma "World of Western" aus 73278 Schlierbach (Kundennummer 5022173446),
Sendung versandt als "INFOPOST/Katalog Groß >100g mit Hülle, PREMIUMADRESS BASIS" (=Produktschlüssel 9226)

> Ergebnis: DEA###+XI##K'ä$##(########0606313
> Frankierart: 02
> Version Produkte/Preise: 26
> Kundennummer: 5022173446
> Frankierwert: 0,75 Euro
> Einlieferungsdatum: 11.04.2012
> Produktschlüssel: 9226
> laufende Sendungsnummer: 00010250
> EDS-Nummer: 0




-------------------------------------------------------------------------


$string = chr(241).str_replace(";", chr(241), $string);
$barcodeobj = new TCPDF2DBarcode();
$barcodeobj->setBarcode($string, 'DATAMATRIX');
$barcodeobj->getBarcodeSVGcode(6, 6, 'black');


The special function characters such as FNC1 through FNC4 do not have any direct ASCII representation. Each symbology that supports such characters has a different scheme for encoding them in its internal representation quite distinct from any byte-orientated character data.

The FNC characters serve both as flag characters (indicating something special to the reader) and as formatting characters (modifying the meaning of the encoded data). As such they are not intended to be transmitted directly in the data received by the host system from a basic barcode reader.

The usual purpose of each of the FNC characters are as follows:

    FNC1 - Structured Data flag character indicating GS1 and AIM formatting and group separator formatting character, amongst other uses.
    FNC2 - Message Append flag character for buffering the data in groups of symbols for a single read.
    FNC3 - Reader Programming flag character for device configuration purposes.
    FNC4 - Extended ASCII formatting character for encoding characters with ordinals 128-255.

Be aware that they may not all be available in certain barcode symbologies and may even be specified in different, non-typical ways.

https://stackoverflow.com/questions/33093751/add-a-fnc1-character-to-code-created-with-tcpdf-datamatrix
https://stackoverflow.com/questions/31318648/what-is-the-actual-hex-binary-value-of-the-gs1-fnc1-character/31322815#31322815



https://www.free-barcode-generator.net/datamatrix/
http://datamatrix.kaywa.com/
http://barcode.tec-it.com/de/DataMatrix?data=4445411224013353FD2100910046001557FC2D0A000A

http://barcode.tec-it.com/de/DataMatrix?data=This%20is%20a%20Data%20Matrix%20by%20TEC-IT
http://www.keyence.com/ss/products/auto_id/barcode_lecture/basic_2d/datamatrix/
https://www.activebarcode.de/codes/datamatrix.html
https://www.activebarcode.de/codes/datamatrix_examples.html

https://ss64.com/convert.html
http://www.scadacore.com/field-tools/programming-calculators/online-hex-converter/
https://www.mathsisfun.com/binary-decimal-hexadecimal-converter.html
http://www.binaryhexconverter.com/
http://www.binaryhexconverter.com/hex-to-binary-converter

https://stackoverflow.com/questions/24290168/simulink-transfer-fcn-with-matrix-as-parameters
https://stackoverflow.com/questions/36575896/ecc200-datamatrix-generation-in-php
https://stackoverflow.com/questions/43476750/datamatrix-16x48-with-tcpdf-library-for-php











